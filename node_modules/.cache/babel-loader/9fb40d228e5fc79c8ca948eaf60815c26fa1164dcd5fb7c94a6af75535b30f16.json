{"ast":null,"code":"var _jsxFileName = \"/Users/manvirsingh/Documents/react1/project/src/components/AdminPortal.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n// import '../css/Admin.css'; // Ensure CSS file path is correct\n\n// const AdminPortal = () => {\n//   const [residentialPumps, setResidentialPumps] = useState([]);\n//   const [agriculturalPumps, setAgriculturalPumps] = useState([]);\n//   const [image, setImage] = useState(null);\n//   const [error, setError] = useState(null);\n//   const [currentView, setCurrentView] = useState('residential');\n//   const [showAddForm, setShowAddForm] = useState(false); // Manage visibility of the add pump form\n//   const [newPumpData, setNewPumpData] = useState({\n//     name: '',\n//     price: '',\n//     description: '',\n//     image: ''\n//   });\n\n//   // Fetch residential pumps data\n//   useEffect(() => {\n//     axios\n//       .get('http://localhost:5001/api/pumps')\n//       .then((response) => setResidentialPumps(response.data))\n//       .catch((error) => console.error('Error fetching residential pumps:', error));\n//   }, []);\n\n//   // Fetch agricultural pumps data\n//   useEffect(() => {\n//     axios\n//       .get('http://localhost:5001/api/agpumps')\n//       .then((response) => setAgriculturalPumps(response.data))\n//       .catch((error) => console.error('Error fetching agricultural pumps:', error));\n//   }, []);\n\n//   // Handle image upload\n//   const handleImageUpload = async (e) => {\n//     const files = e.target.files;\n//     const formData = new FormData();\n//     formData.append('image', files[0]);\n\n//     try {\n//       const response = await axios.post('http://localhost:5001/api/upload', formData);\n//       setImage(response.data.filePath); // Assuming backend returns filePath\n//     } catch (err) {\n//       console.error('Error uploading image:', err);\n//       setError('Error uploading image.');\n//     }\n//   };\n\n//   // Handle new pump form input change\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewPumpData((prevState) => ({\n//       ...prevState,\n//       [name]: value\n//     }));\n//   };\n\n//   // Handle adding new pump to the database\n//   const handleAddPump = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const pumpData = { ...newPumpData, image: image }; // Include image path in the pump data\n//       await axios.post('http://localhost:5001/api/pumps', pumpData);\n//       setShowAddForm(false); // Close the form after submitting\n//       setNewPumpData({ name: '', price: '', description: '', image: '' }); // Reset form data\n//       // Reload residential pumps after adding a new one\n//       const response = await axios.get('http://localhost:5001/api/pumps');\n//       setResidentialPumps(response.data);\n//     } catch (error) {\n//       console.error('Error adding new pump:', error);\n//       setError('Error adding new pump.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"admin-portal\">\n//       <h1>Admin Portal</h1>\n\n//       {/* Sidebar for toggling views */}\n//       <div className=\"sidebar\">\n//         <button\n//           className={`sidebar-btn ${currentView === 'residential' ? 'active' : ''}`}\n//           onClick={() => setCurrentView('residential')}\n//         >\n//           Residential Pumps\n//         </button>\n//         <button\n//           className={`sidebar-btn ${currentView === 'agricultural' ? 'active' : ''}`}\n//           onClick={() => setCurrentView('agricultural')}\n//         >\n//           Agricultural Pumps\n//         </button>\n//       </div>\n\n//       {/* Add New Pump Catalog */}\n//       <div className=\"gallery-container\">\n//         <div className=\"add-new-pump\" onClick={() => setShowAddForm(true)}>\n//           <span className=\"plus-sign\">+</span>\n//           <p className=\"add-text\">Add New Pump</p>\n//         </div>\n//       </div>\n\n//       {/* Add Pump Form (Visible when + sign is clicked) */}\n//       {showAddForm && (\n//         <div className=\"add-pump-form\">\n//           <h2>Add New Pump</h2>\n//           {error && <p className=\"error\">{error}</p>}\n//           <form onSubmit={handleAddPump}>\n//             <input\n//               type=\"text\"\n//               name=\"name\"\n//               value={newPumpData.name}\n//               onChange={handleInputChange}\n//               placeholder=\"Pump Name\"\n//               required\n//             />\n//             <input\n//               type=\"text\"\n//               name=\"price\"\n//               value={newPumpData.price}\n//               onChange={handleInputChange}\n//               placeholder=\"Pump Price\"\n//               required\n//             />\n//             <textarea\n//               name=\"description\"\n//               value={newPumpData.description}\n//               onChange={handleInputChange}\n//               placeholder=\"Description\"\n//               required\n//             />\n//             <input type=\"file\" onChange={handleImageUpload} required />\n//             <button type=\"submit\">Add Pump</button>\n//             <button type=\"button\" onClick={() => setShowAddForm(false)}>Cancel</button>\n//           </form>\n//         </div>\n//       )}\n\n//       {/* Pump Gallery */}\n//       <div className=\"gallery-container\">\n//         <div className=\"pump-gallery\">\n//           {currentView === 'residential' && (\n//             <>\n//               <h2>Residential Pumps</h2>\n//               {residentialPumps.length > 0 ? (\n//                 residentialPumps.map((pump) => (\n//                   <div key={pump._id} className=\"pump-item animate-on-scroll\">\n//                     <img src={`http://localhost:5001/uploads/${pump.image}`} alt={pump.name} />\n//                     <div className=\"pump-info\">\n//                       <p className=\"pump-name\">{pump.name}</p>\n//                       <p className=\"pump-price\">{pump.price}</p>\n//                       <Link to={`/pumpDetail/${pump.id}`} className=\"read-more-btn\">\n//                         Read more\n//                       </Link>\n//                       <button className=\"delete-btn\">Delete</button>\n//                     </div>\n//                   </div>\n//                 ))\n//               ) : (\n//                 <p>Loading Residential Pumps...</p>\n//               )}\n//             </>\n//           )}\n\n//           {currentView === 'agricultural' && (\n//             <>\n//               <h2>Agricultural Pumps</h2>\n//               {agriculturalPumps.length > 0 ? (\n//                 agriculturalPumps.map((pump) => (\n//                   <div key={pump._id} className=\"pump-item animate-on-scroll\">\n//                     <img src={`http://localhost:5001/uploads/${pump.image}`} alt={pump.name} />\n//                     <div className=\"pump-info\">\n//                       <p className=\"pump-name\">{pump.name}</p>\n//                       <p className=\"pump-price\">{pump.price}</p>\n//                       <Link to={`/pumpDetails/${pump.id}`} className=\"read-more-btn\">\n//                         Read more\n//                       </Link>\n//                       <button className=\"delete-btn\">Delete</button>\n//                     </div>\n//                   </div>\n//                 ))\n//               ) : (\n//                 <p>Loading Agricultural Pumps...</p>\n//               )}\n//             </>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AdminPortal;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../css/Admin.css'; // Ensure correct path to the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPortal = () => {\n  _s();\n  const [residentialPumps, setResidentialPumps] = useState([]);\n  const [agriculturalPumps, setAgriculturalPumps] = useState([]);\n  const [image, setImage] = useState('');\n  const [rightImage, setRightImage] = useState('');\n  const [error, setError] = useState(null);\n  const [currentView, setCurrentView] = useState('residential');\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [newPumpData, setNewPumpData] = useState({\n    id: '',\n    name: '',\n    price: '',\n    features: ['', '', ''],\n    image: '',\n    rightImage: ''\n  });\n\n  // Fetch residential pumps data\n  useEffect(() => {\n    axios.get('http://localhost:5001/api/pumps').then(response => setResidentialPumps(response.data)).catch(error => console.error('Error fetching residential pumps:', error));\n  }, []);\n\n  // Fetch agricultural pumps data\n  useEffect(() => {\n    axios.get('http://localhost:5001/api/agpumps').then(response => setAgriculturalPumps(response.data)).catch(error => console.error('Error fetching agricultural pumps:', error));\n  }, []);\n  const handleImageUpload = (e, type) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n    axios.post('http://localhost:5001/api/upload', formData).then(response => {\n      if (type === 'image') {\n        setImage(response.data.filePath);\n        setNewPumpData({\n          ...newPumpData,\n          image: response.data.filePath\n        });\n      } else {\n        setRightImage(response.data.filePath);\n        setNewPumpData({\n          ...newPumpData,\n          rightImage: response.data.filePath\n        });\n      }\n    }).catch(error => {\n      console.error('Error uploading image:', error);\n      setError('Image upload failed.');\n    });\n  };\n  const handleAddFeature = () => {\n    setNewPumpData({\n      ...newPumpData,\n      features: [...newPumpData.features, '']\n    });\n  };\n  const handleFeaturesChange = (e, index) => {\n    const updatedFeatures = [...newPumpData.features];\n    updatedFeatures[index] = e.target.value;\n    setNewPumpData({\n      ...newPumpData,\n      features: updatedFeatures\n    });\n  };\n  const handleAddPump = e => {\n    e.preventDefault();\n    if (currentView === 'residential') {\n      axios.post('http://localhost:5001/api/pumps', newPumpData).then(response => {\n        setResidentialPumps([...residentialPumps, response.data]);\n        setShowAddForm(false);\n      }).catch(error => {\n        console.error('Error adding new pump:', error);\n        setError('Failed to add new pump.');\n      });\n    } else {\n      axios.post('http://localhost:5001/api/agpumps', newPumpData).then(response => {\n        setAgriculturalPumps([...agriculturalPumps, response.data]);\n        setShowAddForm(false);\n      }).catch(error => {\n        console.error('Error adding new pump:', error);\n        setError('Failed to add new agricultural pump.');\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-portal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Portal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentView('residential'),\n        children: \"Residential Pumps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentView('agricultural'),\n        children: \"Agricultural Pumps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAddForm(true),\n        children: \"Add New Pump\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), showAddForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddPump,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"id\",\n        value: newPumpData.id,\n        onChange: e => setNewPumpData({\n          ...newPumpData,\n          id: e.target.value\n        }),\n        placeholder: \"Pump ID\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: newPumpData.name,\n        onChange: e => setNewPumpData({\n          ...newPumpData,\n          name: e.target.value\n        }),\n        placeholder: \"Pump Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"price\",\n        value: newPumpData.price,\n        onChange: e => setNewPumpData({\n          ...newPumpData,\n          price: e.target.value\n        }),\n        placeholder: \"Price\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), newPumpData.features.map((feature, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: feature,\n        onChange: e => handleFeaturesChange(e, index),\n        placeholder: `Feature ${index + 1}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAddFeature,\n        children: \"Add Feature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => handleImageUpload(e, 'image')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => handleImageUpload(e, 'rightImage')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPortal, \"f2q8PA7pAjkZhryxY78B/oVVu/w=\");\n_c = AdminPortal;\nexport default AdminPortal;\nvar _c;\n$RefreshReg$(_c, \"AdminPortal\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AdminPortal","_s","residentialPumps","setResidentialPumps","agriculturalPumps","setAgriculturalPumps","image","setImage","rightImage","setRightImage","error","setError","currentView","setCurrentView","showAddForm","setShowAddForm","newPumpData","setNewPumpData","id","name","price","features","get","then","response","data","catch","console","handleImageUpload","e","type","file","target","files","formData","FormData","append","post","filePath","handleAddFeature","handleFeaturesChange","index","updatedFeatures","value","handleAddPump","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","onChange","placeholder","required","map","feature","_c","$RefreshReg$"],"sources":["/Users/manvirsingh/Documents/react1/project/src/components/AdminPortal.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n// import '../css/Admin.css'; // Ensure CSS file path is correct\n\n// const AdminPortal = () => {\n//   const [residentialPumps, setResidentialPumps] = useState([]);\n//   const [agriculturalPumps, setAgriculturalPumps] = useState([]);\n//   const [image, setImage] = useState(null);\n//   const [error, setError] = useState(null);\n//   const [currentView, setCurrentView] = useState('residential');\n//   const [showAddForm, setShowAddForm] = useState(false); // Manage visibility of the add pump form\n//   const [newPumpData, setNewPumpData] = useState({\n//     name: '',\n//     price: '',\n//     description: '',\n//     image: ''\n//   });\n\n//   // Fetch residential pumps data\n//   useEffect(() => {\n//     axios\n//       .get('http://localhost:5001/api/pumps')\n//       .then((response) => setResidentialPumps(response.data))\n//       .catch((error) => console.error('Error fetching residential pumps:', error));\n//   }, []);\n\n//   // Fetch agricultural pumps data\n//   useEffect(() => {\n//     axios\n//       .get('http://localhost:5001/api/agpumps')\n//       .then((response) => setAgriculturalPumps(response.data))\n//       .catch((error) => console.error('Error fetching agricultural pumps:', error));\n//   }, []);\n\n//   // Handle image upload\n//   const handleImageUpload = async (e) => {\n//     const files = e.target.files;\n//     const formData = new FormData();\n//     formData.append('image', files[0]);\n\n//     try {\n//       const response = await axios.post('http://localhost:5001/api/upload', formData);\n//       setImage(response.data.filePath); // Assuming backend returns filePath\n//     } catch (err) {\n//       console.error('Error uploading image:', err);\n//       setError('Error uploading image.');\n//     }\n//   };\n\n//   // Handle new pump form input change\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewPumpData((prevState) => ({\n//       ...prevState,\n//       [name]: value\n//     }));\n//   };\n\n//   // Handle adding new pump to the database\n//   const handleAddPump = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const pumpData = { ...newPumpData, image: image }; // Include image path in the pump data\n//       await axios.post('http://localhost:5001/api/pumps', pumpData);\n//       setShowAddForm(false); // Close the form after submitting\n//       setNewPumpData({ name: '', price: '', description: '', image: '' }); // Reset form data\n//       // Reload residential pumps after adding a new one\n//       const response = await axios.get('http://localhost:5001/api/pumps');\n//       setResidentialPumps(response.data);\n//     } catch (error) {\n//       console.error('Error adding new pump:', error);\n//       setError('Error adding new pump.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"admin-portal\">\n//       <h1>Admin Portal</h1>\n\n//       {/* Sidebar for toggling views */}\n//       <div className=\"sidebar\">\n//         <button\n//           className={`sidebar-btn ${currentView === 'residential' ? 'active' : ''}`}\n//           onClick={() => setCurrentView('residential')}\n//         >\n//           Residential Pumps\n//         </button>\n//         <button\n//           className={`sidebar-btn ${currentView === 'agricultural' ? 'active' : ''}`}\n//           onClick={() => setCurrentView('agricultural')}\n//         >\n//           Agricultural Pumps\n//         </button>\n//       </div>\n\n//       {/* Add New Pump Catalog */}\n//       <div className=\"gallery-container\">\n//         <div className=\"add-new-pump\" onClick={() => setShowAddForm(true)}>\n//           <span className=\"plus-sign\">+</span>\n//           <p className=\"add-text\">Add New Pump</p>\n//         </div>\n//       </div>\n\n//       {/* Add Pump Form (Visible when + sign is clicked) */}\n//       {showAddForm && (\n//         <div className=\"add-pump-form\">\n//           <h2>Add New Pump</h2>\n//           {error && <p className=\"error\">{error}</p>}\n//           <form onSubmit={handleAddPump}>\n//             <input\n//               type=\"text\"\n//               name=\"name\"\n//               value={newPumpData.name}\n//               onChange={handleInputChange}\n//               placeholder=\"Pump Name\"\n//               required\n//             />\n//             <input\n//               type=\"text\"\n//               name=\"price\"\n//               value={newPumpData.price}\n//               onChange={handleInputChange}\n//               placeholder=\"Pump Price\"\n//               required\n//             />\n//             <textarea\n//               name=\"description\"\n//               value={newPumpData.description}\n//               onChange={handleInputChange}\n//               placeholder=\"Description\"\n//               required\n//             />\n//             <input type=\"file\" onChange={handleImageUpload} required />\n//             <button type=\"submit\">Add Pump</button>\n//             <button type=\"button\" onClick={() => setShowAddForm(false)}>Cancel</button>\n//           </form>\n//         </div>\n//       )}\n\n//       {/* Pump Gallery */}\n//       <div className=\"gallery-container\">\n//         <div className=\"pump-gallery\">\n//           {currentView === 'residential' && (\n//             <>\n//               <h2>Residential Pumps</h2>\n//               {residentialPumps.length > 0 ? (\n//                 residentialPumps.map((pump) => (\n//                   <div key={pump._id} className=\"pump-item animate-on-scroll\">\n//                     <img src={`http://localhost:5001/uploads/${pump.image}`} alt={pump.name} />\n//                     <div className=\"pump-info\">\n//                       <p className=\"pump-name\">{pump.name}</p>\n//                       <p className=\"pump-price\">{pump.price}</p>\n//                       <Link to={`/pumpDetail/${pump.id}`} className=\"read-more-btn\">\n//                         Read more\n//                       </Link>\n//                       <button className=\"delete-btn\">Delete</button>\n//                     </div>\n//                   </div>\n//                 ))\n//               ) : (\n//                 <p>Loading Residential Pumps...</p>\n//               )}\n//             </>\n//           )}\n\n//           {currentView === 'agricultural' && (\n//             <>\n//               <h2>Agricultural Pumps</h2>\n//               {agriculturalPumps.length > 0 ? (\n//                 agriculturalPumps.map((pump) => (\n//                   <div key={pump._id} className=\"pump-item animate-on-scroll\">\n//                     <img src={`http://localhost:5001/uploads/${pump.image}`} alt={pump.name} />\n//                     <div className=\"pump-info\">\n//                       <p className=\"pump-name\">{pump.name}</p>\n//                       <p className=\"pump-price\">{pump.price}</p>\n//                       <Link to={`/pumpDetails/${pump.id}`} className=\"read-more-btn\">\n//                         Read more\n//                       </Link>\n//                       <button className=\"delete-btn\">Delete</button>\n//                     </div>\n//                   </div>\n//                 ))\n//               ) : (\n//                 <p>Loading Agricultural Pumps...</p>\n//               )}\n//             </>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AdminPortal;\n\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../css/Admin.css'; // Ensure correct path to the CSS file\n\nconst AdminPortal = () => {\n  const [residentialPumps, setResidentialPumps] = useState([]);\n  const [agriculturalPumps, setAgriculturalPumps] = useState([]);\n  const [image, setImage] = useState('');\n  const [rightImage, setRightImage] = useState('');\n  const [error, setError] = useState(null);\n  const [currentView, setCurrentView] = useState('residential');\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [newPumpData, setNewPumpData] = useState({\n    id: '',\n    name: '',\n    price: '',\n    features: ['', '', ''],\n    image: '',\n    rightImage: ''\n  });\n\n  // Fetch residential pumps data\n  useEffect(() => {\n    axios.get('http://localhost:5001/api/pumps')\n      .then(response => setResidentialPumps(response.data))\n      .catch(error => console.error('Error fetching residential pumps:', error));\n  }, []);\n\n  // Fetch agricultural pumps data\n  useEffect(() => {\n    axios.get('http://localhost:5001/api/agpumps')\n      .then(response => setAgriculturalPumps(response.data))\n      .catch(error => console.error('Error fetching agricultural pumps:', error));\n  }, []);\n\n  const handleImageUpload = (e, type) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n\n    axios.post('http://localhost:5001/api/upload', formData)\n      .then((response) => {\n        if (type === 'image') {\n          setImage(response.data.filePath);\n          setNewPumpData({ ...newPumpData, image: response.data.filePath });\n        } else {\n          setRightImage(response.data.filePath);\n          setNewPumpData({ ...newPumpData, rightImage: response.data.filePath });\n        }\n      })\n      .catch((error) => {\n        console.error('Error uploading image:', error);\n        setError('Image upload failed.');\n      });\n  };\n\n  const handleAddFeature = () => {\n    setNewPumpData({\n      ...newPumpData,\n      features: [...newPumpData.features, '']\n    });\n  };\n\n  const handleFeaturesChange = (e, index) => {\n    const updatedFeatures = [...newPumpData.features];\n    updatedFeatures[index] = e.target.value;\n    setNewPumpData({ ...newPumpData, features: updatedFeatures });\n  };\n\n  const handleAddPump = (e) => {\n    e.preventDefault();\n    if (currentView === 'residential') {\n      axios.post('http://localhost:5001/api/pumps', newPumpData)\n        .then(response => {\n          setResidentialPumps([...residentialPumps, response.data]);\n          setShowAddForm(false);\n        })\n        .catch(error => {\n          console.error('Error adding new pump:', error);\n          setError('Failed to add new pump.');\n        });\n    } else {\n      axios.post('http://localhost:5001/api/agpumps', newPumpData)\n        .then(response => {\n          setAgriculturalPumps([...agriculturalPumps, response.data]);\n          setShowAddForm(false);\n        })\n        .catch(error => {\n          console.error('Error adding new pump:', error);\n          setError('Failed to add new agricultural pump.');\n        });\n    }\n  };\n\n  return (\n    <div className=\"admin-portal\">\n      <h1>Admin Portal</h1>\n\n      <div className=\"sidebar\">\n        <button onClick={() => setCurrentView('residential')}>Residential Pumps</button>\n        <button onClick={() => setCurrentView('agricultural')}>Agricultural Pumps</button>\n        <button onClick={() => setShowAddForm(true)}>Add New Pump</button>\n      </div>\n\n      {showAddForm && (\n        <form onSubmit={handleAddPump}>\n          <input\n            type=\"text\"\n            name=\"id\"\n            value={newPumpData.id}\n            onChange={(e) => setNewPumpData({ ...newPumpData, id: e.target.value })}\n            placeholder=\"Pump ID\"\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={newPumpData.name}\n            onChange={(e) => setNewPumpData({ ...newPumpData, name: e.target.value })}\n            placeholder=\"Pump Name\"\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"price\"\n            value={newPumpData.price}\n            onChange={(e) => setNewPumpData({ ...newPumpData, price: e.target.value })}\n            placeholder=\"Price\"\n            required\n          />\n\n          {/* Features input */}\n          {newPumpData.features.map((feature, index) => (\n            <input\n              key={index}\n              type=\"text\"\n              value={feature}\n              onChange={(e) => handleFeaturesChange(e, index)}\n              placeholder={`Feature ${index + 1}`}\n            />\n          ))}\n          <button type=\"button\" onClick={handleAddFeature}>Add Feature</button>\n\n          {/* Image upload */}\n          <input type=\"file\" onChange={(e) => handleImageUpload(e, 'image')} />\n          <input type=\"file\" onChange={(e) => handleImageUpload(e, 'rightImage')} />\n\n          <button type=\"submit\">Submit</button>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default AdminPortal;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACS,iBAAiB,EAAEC,oBAAo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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}