{"ast":null,"code":"var _jsxFileName = \"/Users/manvirsingh/Documents/react1/project/src/components/AdminPortal.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n// import '../css/Admin.css'; // Ensure CSS file path is correct\n\n// const AdminPortal = () => {\n//   const [residentialPumps, setResidentialPumps] = useState([]);\n//   const [agriculturalPumps, setAgriculturalPumps] = useState([]);\n//   const [image, setImage] = useState(null);\n//   const [error, setError] = useState(null);\n//   const [currentView, setCurrentView] = useState('residential');\n//   const [showAddForm, setShowAddForm] = useState(false); // Manage visibility of the add pump form\n//   const [newPumpData, setNewPumpData] = useState({\n//     name: '',\n//     price: '',\n//     description: '',\n//     image: ''\n//   });\n\n//   // Fetch residential pumps data\n//   useEffect(() => {\n//     axios\n//       .get('http://localhost:5001/api/pumps')\n//       .then((response) => setResidentialPumps(response.data))\n//       .catch((error) => console.error('Error fetching residential pumps:', error));\n//   }, []);\n\n//   // Fetch agricultural pumps data\n//   useEffect(() => {\n//     axios\n//       .get('http://localhost:5001/api/agpumps')\n//       .then((response) => setAgriculturalPumps(response.data))\n//       .catch((error) => console.error('Error fetching agricultural pumps:', error));\n//   }, []);\n\n//   // Handle image upload\n//   const handleImageUpload = async (e) => {\n//     const files = e.target.files;\n//     const formData = new FormData();\n//     formData.append('image', files[0]);\n\n//     try {\n//       const response = await axios.post('http://localhost:5001/api/upload', formData);\n//       setImage(response.data.filePath); // Assuming backend returns filePath\n//     } catch (err) {\n//       console.error('Error uploading image:', err);\n//       setError('Error uploading image.');\n//     }\n//   };\n\n//   // Handle new pump form input change\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewPumpData((prevState) => ({\n//       ...prevState,\n//       [name]: value\n//     }));\n//   };\n\n//   // Handle adding new pump to the database\n//   const handleAddPump = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const pumpData = { ...newPumpData, image: image }; // Include image path in the pump data\n//       await axios.post('http://localhost:5001/api/pumps', pumpData);\n//       setShowAddForm(false); // Close the form after submitting\n//       setNewPumpData({ name: '', price: '', description: '', image: '' }); // Reset form data\n//       // Reload residential pumps after adding a new one\n//       const response = await axios.get('http://localhost:5001/api/pumps');\n//       setResidentialPumps(response.data);\n//     } catch (error) {\n//       console.error('Error adding new pump:', error);\n//       setError('Error adding new pump.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"admin-portal\">\n//       <h1>Admin Portal</h1>\n\n//       {/* Sidebar for toggling views */}\n//       <div className=\"sidebar\">\n//         <button\n//           className={`sidebar-btn ${currentView === 'residential' ? 'active' : ''}`}\n//           onClick={() => setCurrentView('residential')}\n//         >\n//           Residential Pumps\n//         </button>\n//         <button\n//           className={`sidebar-btn ${currentView === 'agricultural' ? 'active' : ''}`}\n//           onClick={() => setCurrentView('agricultural')}\n//         >\n//           Agricultural Pumps\n//         </button>\n//       </div>\n\n//       {/* Add New Pump Catalog */}\n//       <div className=\"gallery-container\">\n//         <div className=\"add-new-pump\" onClick={() => setShowAddForm(true)}>\n//           <span className=\"plus-sign\">+</span>\n//           <p className=\"add-text\">Add New Pump</p>\n//         </div>\n//       </div>\n\n//       {/* Add Pump Form (Visible when + sign is clicked) */}\n//       {showAddForm && (\n//         <div className=\"add-pump-form\">\n//           <h2>Add New Pump</h2>\n//           {error && <p className=\"error\">{error}</p>}\n//           <form onSubmit={handleAddPump}>\n//             <input\n//               type=\"text\"\n//               name=\"name\"\n//               value={newPumpData.name}\n//               onChange={handleInputChange}\n//               placeholder=\"Pump Name\"\n//               required\n//             />\n//             <input\n//               type=\"text\"\n//               name=\"price\"\n//               value={newPumpData.price}\n//               onChange={handleInputChange}\n//               placeholder=\"Pump Price\"\n//               required\n//             />\n//             <textarea\n//               name=\"description\"\n//               value={newPumpData.description}\n//               onChange={handleInputChange}\n//               placeholder=\"Description\"\n//               required\n//             />\n//             <input type=\"file\" onChange={handleImageUpload} required />\n//             <button type=\"submit\">Add Pump</button>\n//             <button type=\"button\" onClick={() => setShowAddForm(false)}>Cancel</button>\n//           </form>\n//         </div>\n//       )}\n\n//       {/* Pump Gallery */}\n//       <div className=\"gallery-container\">\n//         <div className=\"pump-gallery\">\n//           {currentView === 'residential' && (\n//             <>\n//               <h2>Residential Pumps</h2>\n//               {residentialPumps.length > 0 ? (\n//                 residentialPumps.map((pump) => (\n//                   <div key={pump._id} className=\"pump-item animate-on-scroll\">\n//                     <img src={`http://localhost:5001/uploads/${pump.image}`} alt={pump.name} />\n//                     <div className=\"pump-info\">\n//                       <p className=\"pump-name\">{pump.name}</p>\n//                       <p className=\"pump-price\">{pump.price}</p>\n//                       <Link to={`/pumpDetail/${pump.id}`} className=\"read-more-btn\">\n//                         Read more\n//                       </Link>\n//                       <button className=\"delete-btn\">Delete</button>\n//                     </div>\n//                   </div>\n//                 ))\n//               ) : (\n//                 <p>Loading Residential Pumps...</p>\n//               )}\n//             </>\n//           )}\n\n//           {currentView === 'agricultural' && (\n//             <>\n//               <h2>Agricultural Pumps</h2>\n//               {agriculturalPumps.length > 0 ? (\n//                 agriculturalPumps.map((pump) => (\n//                   <div key={pump._id} className=\"pump-item animate-on-scroll\">\n//                     <img src={`http://localhost:5001/uploads/${pump.image}`} alt={pump.name} />\n//                     <div className=\"pump-info\">\n//                       <p className=\"pump-name\">{pump.name}</p>\n//                       <p className=\"pump-price\">{pump.price}</p>\n//                       <Link to={`/pumpDetails/${pump.id}`} className=\"read-more-btn\">\n//                         Read more\n//                       </Link>\n//                       <button className=\"delete-btn\">Delete</button>\n//                     </div>\n//                   </div>\n//                 ))\n//               ) : (\n//                 <p>Loading Agricultural Pumps...</p>\n//               )}\n//             </>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AdminPortal;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../css/admin.css'; // Assuming this is the custom CSS for the admin portal\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPortal = () => {\n  _s();\n  const [pumps, setPumps] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newPump, setNewPump] = useState({\n    name: '',\n    price: '',\n    features: ['', '', ''],\n    // Example for 3 features\n    image: null,\n    rightImage: null\n  });\n  const [imagePreview, setImagePreview] = useState(null);\n\n  // Fetch pumps from the API\n  const fetchPumps = async () => {\n    try {\n      const response = await axios.get('http://localhost:5001/api/agpumps');\n      setPumps(response.data.agPumps);\n      setLoading(false);\n    } catch (err) {\n      setError('Error fetching pumps.');\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchPumps(); // Call fetchPumps when the component mounts\n  }, []);\n\n  // Handle form input for new pump\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewPump(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  // Handle feature changes\n  const handleFeatureChange = (index, e) => {\n    const newFeatures = [...newPump.features];\n    newFeatures[index] = e.target.value;\n    setNewPump(prevState => ({\n      ...prevState,\n      features: newFeatures\n    }));\n  };\n\n  // Handle image upload\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setNewPump(prevState => ({\n        ...prevState,\n        image: file\n      }));\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // Handle right image upload\n  const handleRightImageUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setNewPump(prevState => ({\n        ...prevState,\n        rightImage: file\n      }));\n    }\n  };\n\n  // Handle new pump form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Create form data for pump upload\n    const formData = new FormData();\n    formData.append('name', newPump.name);\n    formData.append('price', newPump.price);\n    newPump.features.forEach((feature, index) => formData.append(`features[${index}]`, feature));\n    formData.append('image', newPump.image);\n    formData.append('rightImage', newPump.rightImage);\n    try {\n      const response = await axios.post('http://localhost:5001/api/agpumps', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('Pump added successfully!');\n      setNewPump({\n        name: '',\n        price: '',\n        features: ['', '', ''],\n        image: null,\n        rightImage: null\n      });\n      setImagePreview(null);\n      fetchPumps(); // Refresh the pump list after successful addition\n    } catch (err) {\n      alert('Error adding new pump.');\n    }\n  };\n\n  // Render the pump gallery\n  const renderPumpGallery = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading pumps...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 14\n      }, this);\n    }\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 14\n      }, this);\n    }\n    if (pumps.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No pumps available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pump-gallery\",\n      children: pumps.map(pump => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pump-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:5001/uploads/${pump.image}`,\n          alt: pump.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: pump.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: pump.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(pump.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(pump.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this)]\n      }, pump.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Handle editing a pump\n  const handleEdit = pumpId => {\n    console.log('Edit pump with id:', pumpId);\n    // You can add an edit functionality to pre-fill the form for editing a pump\n  };\n\n  // Handle deleting a pump\n  const handleDelete = async pumpId => {\n    try {\n      await axios.delete(`http://localhost:5001/api/agpumps/${pumpId}`);\n      alert('Pump deleted successfully!');\n      fetchPumps(); // Refresh the pump list after deletion\n    } catch (err) {\n      alert('Error deleting pump.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-portal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Portal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Pump\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: newPump.name,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Price:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"price\",\n          value: newPump.price,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Features\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), newPump.features.map((feature, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Feature \", index + 1, \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: feature,\n          onChange: e => handleFeatureChange(index, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Image:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImageUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagePreview,\n        alt: \"Image Preview\",\n        className: \"image-preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Right Image:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleRightImageUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Pump\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderPumpGallery()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 353,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPortal, \"04Ya0z8IgggjVKQSf0YEaVBSkwY=\");\n_c = AdminPortal;\nexport default AdminPortal;\nvar _c;\n$RefreshReg$(_c, \"AdminPortal\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AdminPortal","_s","pumps","setPumps","loading","setLoading","error","setError","newPump","setNewPump","name","price","features","image","rightImage","imagePreview","setImagePreview","fetchPumps","response","get","data","agPumps","err","handleInputChange","e","value","target","prevState","handleFeatureChange","index","newFeatures","handleImageUpload","file","files","reader","FileReader","onloadend","result","readAsDataURL","handleRightImageUpload","handleSubmit","preventDefault","formData","FormData","append","forEach","feature","post","headers","alert","renderPumpGallery","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","pump","src","alt","onClick","handleEdit","id","handleDelete","pumpId","console","log","delete","onSubmit","encType","type","onChange","required","accept","_c","$RefreshReg$"],"sources":["/Users/manvirsingh/Documents/react1/project/src/components/AdminPortal.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n// import '../css/Admin.css'; // Ensure CSS file path is correct\n\n// const AdminPortal = () => {\n//   const [residentialPumps, setResidentialPumps] = useState([]);\n//   const [agriculturalPumps, setAgriculturalPumps] = useState([]);\n//   const [image, setImage] = useState(null);\n//   const [error, setError] = useState(null);\n//   const [currentView, setCurrentView] = useState('residential');\n//   const [showAddForm, setShowAddForm] = useState(false); // Manage visibility of the add pump form\n//   const [newPumpData, setNewPumpData] = useState({\n//     name: '',\n//     price: '',\n//     description: '',\n//     image: ''\n//   });\n\n//   // Fetch residential pumps data\n//   useEffect(() => {\n//     axios\n//       .get('http://localhost:5001/api/pumps')\n//       .then((response) => setResidentialPumps(response.data))\n//       .catch((error) => console.error('Error fetching residential pumps:', error));\n//   }, []);\n\n//   // Fetch agricultural pumps data\n//   useEffect(() => {\n//     axios\n//       .get('http://localhost:5001/api/agpumps')\n//       .then((response) => setAgriculturalPumps(response.data))\n//       .catch((error) => console.error('Error fetching agricultural pumps:', error));\n//   }, []);\n\n//   // Handle image upload\n//   const handleImageUpload = async (e) => {\n//     const files = e.target.files;\n//     const formData = new FormData();\n//     formData.append('image', files[0]);\n\n//     try {\n//       const response = await axios.post('http://localhost:5001/api/upload', formData);\n//       setImage(response.data.filePath); // Assuming backend returns filePath\n//     } catch (err) {\n//       console.error('Error uploading image:', err);\n//       setError('Error uploading image.');\n//     }\n//   };\n\n//   // Handle new pump form input change\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewPumpData((prevState) => ({\n//       ...prevState,\n//       [name]: value\n//     }));\n//   };\n\n//   // Handle adding new pump to the database\n//   const handleAddPump = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const pumpData = { ...newPumpData, image: image }; // Include image path in the pump data\n//       await axios.post('http://localhost:5001/api/pumps', pumpData);\n//       setShowAddForm(false); // Close the form after submitting\n//       setNewPumpData({ name: '', price: '', description: '', image: '' }); // Reset form data\n//       // Reload residential pumps after adding a new one\n//       const response = await axios.get('http://localhost:5001/api/pumps');\n//       setResidentialPumps(response.data);\n//     } catch (error) {\n//       console.error('Error adding new pump:', error);\n//       setError('Error adding new pump.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"admin-portal\">\n//       <h1>Admin Portal</h1>\n\n//       {/* Sidebar for toggling views */}\n//       <div className=\"sidebar\">\n//         <button\n//           className={`sidebar-btn ${currentView === 'residential' ? 'active' : ''}`}\n//           onClick={() => setCurrentView('residential')}\n//         >\n//           Residential Pumps\n//         </button>\n//         <button\n//           className={`sidebar-btn ${currentView === 'agricultural' ? 'active' : ''}`}\n//           onClick={() => setCurrentView('agricultural')}\n//         >\n//           Agricultural Pumps\n//         </button>\n//       </div>\n\n//       {/* Add New Pump Catalog */}\n//       <div className=\"gallery-container\">\n//         <div className=\"add-new-pump\" onClick={() => setShowAddForm(true)}>\n//           <span className=\"plus-sign\">+</span>\n//           <p className=\"add-text\">Add New Pump</p>\n//         </div>\n//       </div>\n\n//       {/* Add Pump Form (Visible when + sign is clicked) */}\n//       {showAddForm && (\n//         <div className=\"add-pump-form\">\n//           <h2>Add New Pump</h2>\n//           {error && <p className=\"error\">{error}</p>}\n//           <form onSubmit={handleAddPump}>\n//             <input\n//               type=\"text\"\n//               name=\"name\"\n//               value={newPumpData.name}\n//               onChange={handleInputChange}\n//               placeholder=\"Pump Name\"\n//               required\n//             />\n//             <input\n//               type=\"text\"\n//               name=\"price\"\n//               value={newPumpData.price}\n//               onChange={handleInputChange}\n//               placeholder=\"Pump Price\"\n//               required\n//             />\n//             <textarea\n//               name=\"description\"\n//               value={newPumpData.description}\n//               onChange={handleInputChange}\n//               placeholder=\"Description\"\n//               required\n//             />\n//             <input type=\"file\" onChange={handleImageUpload} required />\n//             <button type=\"submit\">Add Pump</button>\n//             <button type=\"button\" onClick={() => setShowAddForm(false)}>Cancel</button>\n//           </form>\n//         </div>\n//       )}\n\n//       {/* Pump Gallery */}\n//       <div className=\"gallery-container\">\n//         <div className=\"pump-gallery\">\n//           {currentView === 'residential' && (\n//             <>\n//               <h2>Residential Pumps</h2>\n//               {residentialPumps.length > 0 ? (\n//                 residentialPumps.map((pump) => (\n//                   <div key={pump._id} className=\"pump-item animate-on-scroll\">\n//                     <img src={`http://localhost:5001/uploads/${pump.image}`} alt={pump.name} />\n//                     <div className=\"pump-info\">\n//                       <p className=\"pump-name\">{pump.name}</p>\n//                       <p className=\"pump-price\">{pump.price}</p>\n//                       <Link to={`/pumpDetail/${pump.id}`} className=\"read-more-btn\">\n//                         Read more\n//                       </Link>\n//                       <button className=\"delete-btn\">Delete</button>\n//                     </div>\n//                   </div>\n//                 ))\n//               ) : (\n//                 <p>Loading Residential Pumps...</p>\n//               )}\n//             </>\n//           )}\n\n//           {currentView === 'agricultural' && (\n//             <>\n//               <h2>Agricultural Pumps</h2>\n//               {agriculturalPumps.length > 0 ? (\n//                 agriculturalPumps.map((pump) => (\n//                   <div key={pump._id} className=\"pump-item animate-on-scroll\">\n//                     <img src={`http://localhost:5001/uploads/${pump.image}`} alt={pump.name} />\n//                     <div className=\"pump-info\">\n//                       <p className=\"pump-name\">{pump.name}</p>\n//                       <p className=\"pump-price\">{pump.price}</p>\n//                       <Link to={`/pumpDetails/${pump.id}`} className=\"read-more-btn\">\n//                         Read more\n//                       </Link>\n//                       <button className=\"delete-btn\">Delete</button>\n//                     </div>\n//                   </div>\n//                 ))\n//               ) : (\n//                 <p>Loading Agricultural Pumps...</p>\n//               )}\n//             </>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AdminPortal;\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../css/admin.css'; // Assuming this is the custom CSS for the admin portal\n\nconst AdminPortal = () => {\n  const [pumps, setPumps] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newPump, setNewPump] = useState({\n    name: '',\n    price: '',\n    features: ['', '', ''], // Example for 3 features\n    image: null,\n    rightImage: null\n  });\n  const [imagePreview, setImagePreview] = useState(null);\n\n  // Fetch pumps from the API\n  const fetchPumps = async () => {\n    try {\n      const response = await axios.get('http://localhost:5001/api/agpumps');\n      setPumps(response.data.agPumps);\n      setLoading(false);\n    } catch (err) {\n      setError('Error fetching pumps.');\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPumps(); // Call fetchPumps when the component mounts\n  }, []);\n\n  // Handle form input for new pump\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewPump((prevState) => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  // Handle feature changes\n  const handleFeatureChange = (index, e) => {\n    const newFeatures = [...newPump.features];\n    newFeatures[index] = e.target.value;\n    setNewPump((prevState) => ({\n      ...prevState,\n      features: newFeatures\n    }));\n  };\n\n  // Handle image upload\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setNewPump((prevState) => ({\n        ...prevState,\n        image: file\n      }));\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // Handle right image upload\n  const handleRightImageUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setNewPump((prevState) => ({\n        ...prevState,\n        rightImage: file\n      }));\n    }\n  };\n\n  // Handle new pump form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Create form data for pump upload\n    const formData = new FormData();\n    formData.append('name', newPump.name);\n    formData.append('price', newPump.price);\n    newPump.features.forEach((feature, index) => formData.append(`features[${index}]`, feature));\n    formData.append('image', newPump.image);\n    formData.append('rightImage', newPump.rightImage);\n\n    try {\n      const response = await axios.post('http://localhost:5001/api/agpumps', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('Pump added successfully!');\n      setNewPump({ name: '', price: '', features: ['', '', ''], image: null, rightImage: null });\n      setImagePreview(null);\n      fetchPumps(); // Refresh the pump list after successful addition\n    } catch (err) {\n      alert('Error adding new pump.');\n    }\n  };\n\n  // Render the pump gallery\n  const renderPumpGallery = () => {\n    if (loading) {\n      return <div>Loading pumps...</div>;\n    }\n\n    if (error) {\n      return <div>{error}</div>;\n    }\n\n    if (pumps.length === 0) {\n      return <div>No pumps available.</div>;\n    }\n\n    return (\n      <div className=\"pump-gallery\">\n        {pumps.map((pump) => (\n          <div key={pump.id} className=\"pump-item\">\n            <img src={`http://localhost:5001/uploads/${pump.image}`} alt={pump.name} />\n            <h3>{pump.name}</h3>\n            <p>{pump.price}</p>\n            <button onClick={() => handleEdit(pump.id)}>Edit</button>\n            <button onClick={() => handleDelete(pump.id)}>Delete</button>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  // Handle editing a pump\n  const handleEdit = (pumpId) => {\n    console.log('Edit pump with id:', pumpId);\n    // You can add an edit functionality to pre-fill the form for editing a pump\n  };\n\n  // Handle deleting a pump\n  const handleDelete = async (pumpId) => {\n    try {\n      await axios.delete(`http://localhost:5001/api/agpumps/${pumpId}`);\n      alert('Pump deleted successfully!');\n      fetchPumps(); // Refresh the pump list after deletion\n    } catch (err) {\n      alert('Error deleting pump.');\n    }\n  };\n\n  return (\n    <div className=\"admin-portal\">\n      <h1>Admin Portal</h1>\n\n      {/* Form to add a new pump */}\n      <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\n        <h2>Add New Pump</h2>\n        <label>\n          Name:\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={newPump.name}\n            onChange={handleInputChange}\n            required\n          />\n        </label>\n        <label>\n          Price:\n          <input\n            type=\"text\"\n            name=\"price\"\n            value={newPump.price}\n            onChange={handleInputChange}\n            required\n          />\n        </label>\n\n        {/* Features */}\n        <h3>Features</h3>\n        {newPump.features.map((feature, index) => (\n          <label key={index}>\n            Feature {index + 1}:\n            <input\n              type=\"text\"\n              value={feature}\n              onChange={(e) => handleFeatureChange(index, e)}\n            />\n          </label>\n        ))}\n\n        {/* Image Upload */}\n        <label>\n          Image:\n          <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload} />\n        </label>\n\n        {imagePreview && <img src={imagePreview} alt=\"Image Preview\" className=\"image-preview\" />}\n\n        {/* Right Image Upload */}\n        <label>\n          Right Image:\n          <input type=\"file\" accept=\"image/*\" onChange={handleRightImageUpload} />\n        </label>\n\n        <button type=\"submit\">Add Pump</button>\n      </form>\n\n      {/* Render the pump gallery */}\n      <div>{renderPumpGallery()}</div>\n    </div>\n  );\n};\n\nexport default AdminPortal;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC;IACrCe,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAAE;IACxBC,KAAK,EAAE,IAAI;IACXC,UAAU,EAAE;EACd,CAAC,CAAC;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAMsB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,mCAAmC,CAAC;MACrEhB,QAAQ,CAACe,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC;MAC/BhB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACZf,QAAQ,CAAC,uBAAuB,CAAC;MACjCF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDT,SAAS,CAAC,MAAM;IACdqB,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEd,IAAI;MAAEe;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCjB,UAAU,CAAEkB,SAAS,KAAM;MACzB,GAAGA,SAAS;MACZ,CAACjB,IAAI,GAAGe;IACV,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAMG,mBAAmB,GAAGA,CAACC,KAAK,EAAEL,CAAC,KAAK;IACxC,MAAMM,WAAW,GAAG,CAAC,GAAGtB,OAAO,CAACI,QAAQ,CAAC;IACzCkB,WAAW,CAACD,KAAK,CAAC,GAAGL,CAAC,CAACE,MAAM,CAACD,KAAK;IACnChB,UAAU,CAAEkB,SAAS,KAAM;MACzB,GAAGA,SAAS;MACZf,QAAQ,EAAEkB;IACZ,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAIP,CAAC,IAAK;IAC/B,MAAMQ,IAAI,GAAGR,CAAC,CAACE,MAAM,CAACO,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAID,IAAI,EAAE;MACRvB,UAAU,CAAEkB,SAAS,KAAM;QACzB,GAAGA,SAAS;QACZd,KAAK,EAAEmB;MACT,CAAC,CAAC,CAAC;MACH,MAAME,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;QACvBpB,eAAe,CAACkB,MAAM,CAACG,MAAM,CAAC;MAChC,CAAC;MACDH,MAAM,CAACI,aAAa,CAACN,IAAI,CAAC;IAC5B;EACF,CAAC;;EAED;EACA,MAAMO,sBAAsB,GAAIf,CAAC,IAAK;IACpC,MAAMQ,IAAI,GAAGR,CAAC,CAACE,MAAM,CAACO,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAID,IAAI,EAAE;MACRvB,UAAU,CAAEkB,SAAS,KAAM;QACzB,GAAGA,SAAS;QACZb,UAAU,EAAEkB;MACd,CAAC,CAAC,CAAC;IACL;EACF,CAAC;;EAED;EACA,MAAMQ,YAAY,GAAG,MAAOhB,CAAC,IAAK;IAChCA,CAAC,CAACiB,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEpC,OAAO,CAACE,IAAI,CAAC;IACrCgC,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEpC,OAAO,CAACG,KAAK,CAAC;IACvCH,OAAO,CAACI,QAAQ,CAACiC,OAAO,CAAC,CAACC,OAAO,EAAEjB,KAAK,KAAKa,QAAQ,CAACE,MAAM,CAAC,YAAYf,KAAK,GAAG,EAAEiB,OAAO,CAAC,CAAC;IAC5FJ,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEpC,OAAO,CAACK,KAAK,CAAC;IACvC6B,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEpC,OAAO,CAACM,UAAU,CAAC;IAEjD,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMrB,KAAK,CAACkD,IAAI,CAAC,mCAAmC,EAAEL,QAAQ,EAAE;QAC/EM,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACFC,KAAK,CAAC,0BAA0B,CAAC;MACjCxC,UAAU,CAAC;QAAEC,IAAI,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,IAAI;QAAEC,UAAU,EAAE;MAAK,CAAC,CAAC;MAC1FE,eAAe,CAAC,IAAI,CAAC;MACrBC,UAAU,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZ2B,KAAK,CAAC,wBAAwB,CAAC;IACjC;EACF,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI9C,OAAO,EAAE;MACX,oBAAOL,OAAA;QAAAoD,QAAA,EAAK;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IACpC;IAEA,IAAIjD,KAAK,EAAE;MACT,oBAAOP,OAAA;QAAAoD,QAAA,EAAM7C;MAAK;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAC3B;IAEA,IAAIrD,KAAK,CAACsD,MAAM,KAAK,CAAC,EAAE;MACtB,oBAAOzD,OAAA;QAAAoD,QAAA,EAAK;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IACvC;IAEA,oBACExD,OAAA;MAAK0D,SAAS,EAAC,cAAc;MAAAN,QAAA,EAC1BjD,KAAK,CAACwD,GAAG,CAAEC,IAAI,iBACd5D,OAAA;QAAmB0D,SAAS,EAAC,WAAW;QAAAN,QAAA,gBACtCpD,OAAA;UAAK6D,GAAG,EAAE,iCAAiCD,IAAI,CAAC9C,KAAK,EAAG;UAACgD,GAAG,EAAEF,IAAI,CAACjD;QAAK;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3ExD,OAAA;UAAAoD,QAAA,EAAKQ,IAAI,CAACjD;QAAI;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBxD,OAAA;UAAAoD,QAAA,EAAIQ,IAAI,CAAChD;QAAK;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnBxD,OAAA;UAAQ+D,OAAO,EAAEA,CAAA,KAAMC,UAAU,CAACJ,IAAI,CAACK,EAAE,CAAE;UAAAb,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACzDxD,OAAA;UAAQ+D,OAAO,EAAEA,CAAA,KAAMG,YAAY,CAACN,IAAI,CAACK,EAAE,CAAE;UAAAb,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GALrDI,IAAI,CAACK,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV,CAAC;;EAED;EACA,MAAMQ,UAAU,GAAIG,MAAM,IAAK;IAC7BC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,MAAM,CAAC;IACzC;EACF,CAAC;;EAED;EACA,MAAMD,YAAY,GAAG,MAAOC,MAAM,IAAK;IACrC,IAAI;MACF,MAAMrE,KAAK,CAACwE,MAAM,CAAC,qCAAqCH,MAAM,EAAE,CAAC;MACjEjB,KAAK,CAAC,4BAA4B,CAAC;MACnChC,UAAU,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZ2B,KAAK,CAAC,sBAAsB,CAAC;IAC/B;EACF,CAAC;EAED,oBACElD,OAAA;IAAK0D,SAAS,EAAC,cAAc;IAAAN,QAAA,gBAC3BpD,OAAA;MAAAoD,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGrBxD,OAAA;MAAMuE,QAAQ,EAAE9B,YAAa;MAAC+B,OAAO,EAAC,qBAAqB;MAAApB,QAAA,gBACzDpD,OAAA;QAAAoD,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBxD,OAAA;QAAAoD,QAAA,GAAO,OAEL,eAAApD,OAAA;UACEyE,IAAI,EAAC,MAAM;UACX9D,IAAI,EAAC,MAAM;UACXe,KAAK,EAAEjB,OAAO,CAACE,IAAK;UACpB+D,QAAQ,EAAElD,iBAAkB;UAC5BmD,QAAQ;QAAA;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRxD,OAAA;QAAAoD,QAAA,GAAO,QAEL,eAAApD,OAAA;UACEyE,IAAI,EAAC,MAAM;UACX9D,IAAI,EAAC,OAAO;UACZe,KAAK,EAAEjB,OAAO,CAACG,KAAM;UACrB8D,QAAQ,EAAElD,iBAAkB;UAC5BmD,QAAQ;QAAA;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAGRxD,OAAA;QAAAoD,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAChB/C,OAAO,CAACI,QAAQ,CAAC8C,GAAG,CAAC,CAACZ,OAAO,EAAEjB,KAAK,kBACnC9B,OAAA;QAAAoD,QAAA,GAAmB,UACT,EAACtB,KAAK,GAAG,CAAC,EAAC,GACnB,eAAA9B,OAAA;UACEyE,IAAI,EAAC,MAAM;UACX/C,KAAK,EAAEqB,OAAQ;UACf2B,QAAQ,EAAGjD,CAAC,IAAKI,mBAAmB,CAACC,KAAK,EAAEL,CAAC;QAAE;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC;MAAA,GANQ1B,KAAK;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOV,CACR,CAAC,eAGFxD,OAAA;QAAAoD,QAAA,GAAO,QAEL,eAAApD,OAAA;UAAOyE,IAAI,EAAC,MAAM;UAACG,MAAM,EAAC,SAAS;UAACF,QAAQ,EAAE1C;QAAkB;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC,EAEPxC,YAAY,iBAAIhB,OAAA;QAAK6D,GAAG,EAAE7C,YAAa;QAAC8C,GAAG,EAAC,eAAe;QAACJ,SAAS,EAAC;MAAe;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGzFxD,OAAA;QAAAoD,QAAA,GAAO,cAEL,eAAApD,OAAA;UAAOyE,IAAI,EAAC,MAAM;UAACG,MAAM,EAAC,SAAS;UAACF,QAAQ,EAAElC;QAAuB;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC,eAERxD,OAAA;QAAQyE,IAAI,EAAC,QAAQ;QAAArB,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eAGPxD,OAAA;MAAAoD,QAAA,EAAMD,iBAAiB,CAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV,CAAC;AAACtD,EAAA,CAlNID,WAAW;AAAA4E,EAAA,GAAX5E,WAAW;AAoNjB,eAAeA,WAAW;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}