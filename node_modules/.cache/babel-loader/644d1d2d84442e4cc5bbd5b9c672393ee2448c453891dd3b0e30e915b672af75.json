{"ast":null,"code":"var _jsxFileName = \"/Users/manvirsingh/Documents/react1/project/src/context/PumpContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PumpContext = /*#__PURE__*/createContext();\nexport const PumpProvider = ({\n  children\n}) => {\n  _s();\n  const [pumps, setPumps] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetch('http://localhost:5001/api/pumps').then(response => response.json()).then(data => {\n      if (data.success) {\n        setPumps(data.pumps);\n      } else {\n        setError('Failed to load pumps.');\n      }\n      setLoading(false);\n    }).catch(err => {\n      console.error('Error fetching pumps:', err);\n      setError('Failed to load pumps.');\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PumpContext.Provider, {\n    value: {\n      pumps,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(PumpProvider, \"3z4Z8cq8neXhSEgIEqI82g8X8Q4=\");\n_c = PumpProvider;\nvar _c;\n$RefreshReg$(_c, \"PumpProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","PumpContext","PumpProvider","children","_s","pumps","setPumps","loading","setLoading","error","setError","fetch","then","response","json","data","success","catch","err","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/manvirsingh/Documents/react1/project/src/context/PumpContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const PumpContext = createContext();\n\nexport const PumpProvider = ({ children }) => {\n    const [pumps, setPumps] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        fetch('http://localhost:5001/api/pumps')\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    setPumps(data.pumps);\n                } else {\n                    setError('Failed to load pumps.');\n                }\n                setLoading(false);\n            })\n            .catch((err) => {\n                console.error('Error fetching pumps:', err);\n                setError('Failed to load pumps.');\n                setLoading(false);\n            });\n    }, []);\n\n    return (\n        <PumpContext.Provider value={{ pumps, loading, error }}>\n            {children}\n        </PumpContext.Provider>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZa,KAAK,CAAC,iCAAiC,CAAC,CACnCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACZ,IAAIA,IAAI,CAACC,OAAO,EAAE;QACdV,QAAQ,CAACS,IAAI,CAACV,KAAK,CAAC;MACxB,CAAC,MAAM;QACHK,QAAQ,CAAC,uBAAuB,CAAC;MACrC;MACAF,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDS,KAAK,CAAEC,GAAG,IAAK;MACZC,OAAO,CAACV,KAAK,CAAC,uBAAuB,EAAES,GAAG,CAAC;MAC3CR,QAAQ,CAAC,uBAAuB,CAAC;MACjCF,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIR,OAAA,CAACC,WAAW,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,KAAK;MAAEE,OAAO;MAAEE;IAAM,CAAE;IAAAN,QAAA,EAClDA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACrB,EAAA,CA5BWF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}