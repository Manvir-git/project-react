{"ast":null,"code":"\n// import React, { useState, useEffect } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import prod from '../images/prod.png';\n// import pump2 from '../images/pump2.png';\n// import bg2 from '../images/Pump3.jpg';\n// import bg3 from '../images/Pump2.jpg'\n\n// import '../css/styles.css';\n\n// function Home() {\n//   const [residentialPumps, setResidentialPumps] = useState([]);\n//   const [currentIndex, setCurrentIndex] = useState(0);\n//   const images = [bg2,bg3];\n//   const navigate = useNavigate(); // Used for redirecting\n\n//   // State for animated numbers\n//   const [inProgressSites, setInProgressSites] = useState(0);\n//   const [pumpsSold, setPumpsSold] = useState(0);\n\n//   // Fetch pumps data from the backend\n//   useEffect(() => {\n//     axios\n//       .get('http://localhost:5001/api/pumps')\n//       .then(response => setResidentialPumps(response.data))\n//       .catch(error => console.error('Error fetching residential pumps:', error));\n//   }, []);\n\n//   // Automatic sliding for the main image\n//   // useEffect(() => {\n//   //   const interval = setInterval(() => {\n//   //     setIsSliding(true); // Start sliding\n\n//   //     setTimeout(() => {\n//   //       setCurrentIndex((prevIndex) => (prevIndex + 1) % images.length); // Change image after sliding\n//   //       setIsSliding(false); // Reset sliding state\n//   //     }, 1000); // Slide duration (matches CSS transition)\n//   //   }, 3000); // Interval between slides\n\n//   //   return () => clearInterval(interval);\n//   // }, [images.length]);\n\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       setCurrentIndex((prevIndex) => (prevIndex + 1) % images.length);\n//     }, 4000); // Change image every 4 seconds\n\n//     return () => clearInterval(interval);\n//   }, [images.length]);\n\n//   // Add scroll animations\n//   const handleScroll = () => {\n//     const elements = document.querySelectorAll('.animate-on-scroll');\n//     elements.forEach((el) => {\n//       const rect = el.getBoundingClientRect();\n//       if (rect.top < window.innerHeight - 100) {\n//         el.classList.add('slide-in');\n//       }\n//     });\n//   };\n\n//   //function to animate image on reload.\n//   useEffect(() => {\n//     const topImageSection = document.querySelector('.image-section1');\n//     if (topImageSection) {\n//       topImageSection.classList.add('slide-in'); // Add the animation class on load\n//     }\n//   }, []);\n\n//   // Adding scroll event listener and cleanup\n//   useEffect(() => {\n//     window.addEventListener('scroll', handleScroll);\n//     return () => window.removeEventListener('scroll', handleScroll);\n//   }, []);\n\n//   // Number animation logic\n//   useEffect(() => {\n//     // General animation function\n//     const animateNumbers = (start, end, duration, setter) => {\n//       const range = end - start;\n//       const increment = Math.max(1, range / (duration / 30)); // Calculate increment\n//       let current = start;\n\n//       const timer = setInterval(() => {\n//         current += increment;\n//         if (current >= end) {\n//           current = end; // Ensure the value stops at the target\n//           clearInterval(timer);\n//         }\n//         setter(Math.round(current)); // Round for whole numbers\n//       }, 30); // Update every 30ms\n//     };\n\n//     // Specific function for animating 0 to 10\n//     const animateToTen = (duration, setter) => {\n//       const stepDuration = duration / 10; // Divide total duration by the number of steps\n//       let current = 0;\n\n//       const timer = setInterval(() => {\n//         current += 1; // Increment by 1 for a distinct count\n//         setter(current);\n//         if (current >= 10) {\n//           clearInterval(timer); // Stop animation when target is reached\n//         }\n//       }, stepDuration); // Each step takes stepDuration milliseconds\n//     };\n\n//     const observer = new IntersectionObserver(\n//       (entries) => {\n//         entries.forEach((entry) => {\n//           if (entry.isIntersecting) {\n//             const sharedDuration = 2000; // Both animations should end in 3 seconds\n//             animateToTen(sharedDuration, setInProgressSites); // Animate 0 to 10 distinctly\n//             animateNumbers(0, 12000, sharedDuration, setPumpsSold); // Animate 0 to 12000 quickly\n//             observer.disconnect(); // Stop observing after animation\n//           }\n//         });\n//       },\n//       { threshold: 0.5 } // Trigger when 50% of the element is visible\n//     );\n\n//     const target = document.querySelector('.container2');\n//     if (target) observer.observe(target);\n\n//     return () => observer.disconnect();\n//   }, [setInProgressSites, setPumpsSold]);\n\n//   // Handle image click to redirect\n//   const handleImageClick = (pumpId) => {\n//     navigate(`/pumpDetail/${pumpId}`);\n//   };\n\n//   return (\n//     <div className=\"main-content\">\n//     {/* Main Image Section */}\n//     <div className=\"image-section1 animate-on-scroll\">\n//       <div className=\"slider\">\n//         <div\n//           className=\"slider-images\"\n//           style={{\n//             display: \"flex\",\n//             transform: `translateX(-${currentIndex * 100}%)`,\n//             transition: \"transform 1s ease-in-out\", // Smooth transition effect\n//           }}\n//         >\n//           {images.map((image, index) => (\n//             <img\n//               key={index}\n//               src={image}\n//               alt={`Slide ${index}`}\n//               className=\"slider-image\"\n//               style={{ width: \"100%\", flexShrink: 0 }} // Ensures images are responsive\n//             />\n//           ))}\n//         </div>\n//       </div>\n//     </div>\n\n//       {/* Product Introduction */}\n//       <div className=\"b animate-on-scroll\">\n//     <p className=\"b2\">\n//       Explore our range of Agricultural submersible pumps <br />\n//       The product range covers a wide application such as agriculture,\n//       water supply to townships, industries, sewage, and drainage.\n//     </p>\n//     <Link to=\"/products\" className=\"btn\">View Products</Link>\n// </div>\n\n//       {/* Residential Pumps Section */}\n//       <div className=\"section-title animate-on-scroll\">Residential Submersible Pumps</div>\n//       <div className=\"pump-gallery\">\n//         {residentialPumps.length > 0 ? (\n//           residentialPumps.map((pump) => (\n//             <div \n//               key={pump.id} \n//               className=\"pump-item animate-on-scroll\"\n//               onClick={() => handleImageClick(pump.id)} // Redirect on click\n//               style={{ cursor: 'pointer' }} // Change cursor to pointer\n//             >\n//               <img\n//                 src={`http://localhost:5001/uploads/${pump.image}`}\n//                 alt={pump.name}\n//                 className=\"pump-image\"\n//                 onMouseOver={(e) => e.currentTarget.classList.add('image-3d')}\n//                 onMouseOut={(e) => e.currentTarget.classList.remove('image-3d')}\n//               />\n//               <div className=\"pump-info\">\n//                 <p className=\"pump-name\">{pump.name}</p>\n//                 <p className=\"pump-price\">{pump.price}</p>\n//                 <Link to={`/pumpDetail/${pump.id}`} className=\"read-more-btn\">Read more</Link>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>Loading Residential Pumps...</p>\n//         )}\n//       </div>\n\n//       {/* About Section */}\n//       <div className=\"container2 animate-on-scroll\">\n//         <div className=\"content\">\n//           <center>\n//             <h3 style={{ marginRight: '70px', fontSize: '20px' }}>About our company</h3>\n//             <h2 style={{ textAlign: 'center' }}>We provide professional solutions to choose a suitable pump</h2>\n//             <p style={{ marginRight: '55px' }}>\n//               The product range covers a wide application<br />\n//               such as domestic, agriculture, water supply to <br />\n//               townships, industries, sewage, and drainage.\n//             </p>\n//           </center>\n//           <div className=\"side-sections\">\n//             <div className=\"side-section\">\n//               <h1>{inProgressSites}</h1>\n//               <p>In-Progress Sites.</p>\n//             </div>\n//             <div className=\"side-section\">\n//               <h1>{pumpsSold.toLocaleString()}+</h1>\n//               <p>Pumps Sold.</p>\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"image-container\">\n//           <img src={pump2} alt=\"Pump Showcase\" />\n//         </div>\n//       </div>\n\n//       {/* Additional Sections */}\n//       <div className=\"new animate-on-scroll\">\n//         <h5>We Believe Every Client Is a<br />Valuable Long-Term Partner</h5>\n//       </div>\n//       <div className=\"prod animate-on-scroll\">\n//         <img src={prod} alt=\"Product Display\" />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Home;","map":{"version":3,"names":[],"sources":["/Users/manvirsingh/Documents/react1/project/src/home/Home.js"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import prod from '../images/prod.png';\n// import pump2 from '../images/pump2.png';\n// import bg2 from '../images/Pump3.jpg';\n// import bg3 from '../images/Pump2.jpg'\n\n// import '../css/styles.css';\n\n// function Home() {\n//   const [residentialPumps, setResidentialPumps] = useState([]);\n//   const [currentIndex, setCurrentIndex] = useState(0);\n//   const images = [bg2,bg3];\n//   const navigate = useNavigate(); // Used for redirecting\n\n//   // State for animated numbers\n//   const [inProgressSites, setInProgressSites] = useState(0);\n//   const [pumpsSold, setPumpsSold] = useState(0);\n\n//   // Fetch pumps data from the backend\n//   useEffect(() => {\n//     axios\n//       .get('http://localhost:5001/api/pumps')\n//       .then(response => setResidentialPumps(response.data))\n//       .catch(error => console.error('Error fetching residential pumps:', error));\n//   }, []);\n\n//   // Automatic sliding for the main image\n//   // useEffect(() => {\n//   //   const interval = setInterval(() => {\n//   //     setIsSliding(true); // Start sliding\n\n//   //     setTimeout(() => {\n//   //       setCurrentIndex((prevIndex) => (prevIndex + 1) % images.length); // Change image after sliding\n//   //       setIsSliding(false); // Reset sliding state\n//   //     }, 1000); // Slide duration (matches CSS transition)\n//   //   }, 3000); // Interval between slides\n\n//   //   return () => clearInterval(interval);\n//   // }, [images.length]);\n\n \n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       setCurrentIndex((prevIndex) => (prevIndex + 1) % images.length);\n//     }, 4000); // Change image every 4 seconds\n\n//     return () => clearInterval(interval);\n//   }, [images.length]);\n\n\n//   // Add scroll animations\n//   const handleScroll = () => {\n//     const elements = document.querySelectorAll('.animate-on-scroll');\n//     elements.forEach((el) => {\n//       const rect = el.getBoundingClientRect();\n//       if (rect.top < window.innerHeight - 100) {\n//         el.classList.add('slide-in');\n//       }\n//     });\n//   };\n\n\n//   //function to animate image on reload.\n//   useEffect(() => {\n//     const topImageSection = document.querySelector('.image-section1');\n//     if (topImageSection) {\n//       topImageSection.classList.add('slide-in'); // Add the animation class on load\n//     }\n//   }, []);\n\n//   // Adding scroll event listener and cleanup\n//   useEffect(() => {\n//     window.addEventListener('scroll', handleScroll);\n//     return () => window.removeEventListener('scroll', handleScroll);\n//   }, []);\n\n//   // Number animation logic\n//   useEffect(() => {\n//     // General animation function\n//     const animateNumbers = (start, end, duration, setter) => {\n//       const range = end - start;\n//       const increment = Math.max(1, range / (duration / 30)); // Calculate increment\n//       let current = start;\n  \n//       const timer = setInterval(() => {\n//         current += increment;\n//         if (current >= end) {\n//           current = end; // Ensure the value stops at the target\n//           clearInterval(timer);\n//         }\n//         setter(Math.round(current)); // Round for whole numbers\n//       }, 30); // Update every 30ms\n//     };\n  \n//     // Specific function for animating 0 to 10\n//     const animateToTen = (duration, setter) => {\n//       const stepDuration = duration / 10; // Divide total duration by the number of steps\n//       let current = 0;\n  \n//       const timer = setInterval(() => {\n//         current += 1; // Increment by 1 for a distinct count\n//         setter(current);\n//         if (current >= 10) {\n//           clearInterval(timer); // Stop animation when target is reached\n//         }\n//       }, stepDuration); // Each step takes stepDuration milliseconds\n//     };\n  \n//     const observer = new IntersectionObserver(\n//       (entries) => {\n//         entries.forEach((entry) => {\n//           if (entry.isIntersecting) {\n//             const sharedDuration = 2000; // Both animations should end in 3 seconds\n//             animateToTen(sharedDuration, setInProgressSites); // Animate 0 to 10 distinctly\n//             animateNumbers(0, 12000, sharedDuration, setPumpsSold); // Animate 0 to 12000 quickly\n//             observer.disconnect(); // Stop observing after animation\n//           }\n//         });\n//       },\n//       { threshold: 0.5 } // Trigger when 50% of the element is visible\n//     );\n  \n//     const target = document.querySelector('.container2');\n//     if (target) observer.observe(target);\n  \n//     return () => observer.disconnect();\n//   }, [setInProgressSites, setPumpsSold]);\n  \n\n//   // Handle image click to redirect\n//   const handleImageClick = (pumpId) => {\n//     navigate(`/pumpDetail/${pumpId}`);\n//   };\n\n//   return (\n//     <div className=\"main-content\">\n//     {/* Main Image Section */}\n//     <div className=\"image-section1 animate-on-scroll\">\n//       <div className=\"slider\">\n//         <div\n//           className=\"slider-images\"\n//           style={{\n//             display: \"flex\",\n//             transform: `translateX(-${currentIndex * 100}%)`,\n//             transition: \"transform 1s ease-in-out\", // Smooth transition effect\n//           }}\n//         >\n//           {images.map((image, index) => (\n//             <img\n//               key={index}\n//               src={image}\n//               alt={`Slide ${index}`}\n//               className=\"slider-image\"\n//               style={{ width: \"100%\", flexShrink: 0 }} // Ensures images are responsive\n//             />\n//           ))}\n//         </div>\n//       </div>\n//     </div>\n\n\n//       {/* Product Introduction */}\n//       <div className=\"b animate-on-scroll\">\n//     <p className=\"b2\">\n//       Explore our range of Agricultural submersible pumps <br />\n//       The product range covers a wide application such as agriculture,\n//       water supply to townships, industries, sewage, and drainage.\n//     </p>\n//     <Link to=\"/products\" className=\"btn\">View Products</Link>\n// </div>\n\n\n//       {/* Residential Pumps Section */}\n//       <div className=\"section-title animate-on-scroll\">Residential Submersible Pumps</div>\n//       <div className=\"pump-gallery\">\n//         {residentialPumps.length > 0 ? (\n//           residentialPumps.map((pump) => (\n//             <div \n//               key={pump.id} \n//               className=\"pump-item animate-on-scroll\"\n//               onClick={() => handleImageClick(pump.id)} // Redirect on click\n//               style={{ cursor: 'pointer' }} // Change cursor to pointer\n//             >\n//               <img\n//                 src={`http://localhost:5001/uploads/${pump.image}`}\n//                 alt={pump.name}\n//                 className=\"pump-image\"\n//                 onMouseOver={(e) => e.currentTarget.classList.add('image-3d')}\n//                 onMouseOut={(e) => e.currentTarget.classList.remove('image-3d')}\n//               />\n//               <div className=\"pump-info\">\n//                 <p className=\"pump-name\">{pump.name}</p>\n//                 <p className=\"pump-price\">{pump.price}</p>\n//                 <Link to={`/pumpDetail/${pump.id}`} className=\"read-more-btn\">Read more</Link>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>Loading Residential Pumps...</p>\n//         )}\n//       </div>\n\n//       {/* About Section */}\n//       <div className=\"container2 animate-on-scroll\">\n//         <div className=\"content\">\n//           <center>\n//             <h3 style={{ marginRight: '70px', fontSize: '20px' }}>About our company</h3>\n//             <h2 style={{ textAlign: 'center' }}>We provide professional solutions to choose a suitable pump</h2>\n//             <p style={{ marginRight: '55px' }}>\n//               The product range covers a wide application<br />\n//               such as domestic, agriculture, water supply to <br />\n//               townships, industries, sewage, and drainage.\n//             </p>\n//           </center>\n//           <div className=\"side-sections\">\n//             <div className=\"side-section\">\n//               <h1>{inProgressSites}</h1>\n//               <p>In-Progress Sites.</p>\n//             </div>\n//             <div className=\"side-section\">\n//               <h1>{pumpsSold.toLocaleString()}+</h1>\n//               <p>Pumps Sold.</p>\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"image-container\">\n//           <img src={pump2} alt=\"Pump Showcase\" />\n//         </div>\n//       </div>\n\n//       {/* Additional Sections */}\n//       <div className=\"new animate-on-scroll\">\n//         <h5>We Believe Every Client Is a<br />Valuable Long-Term Partner</h5>\n//       </div>\n//       <div className=\"prod animate-on-scroll\">\n//         <img src={prod} alt=\"Product Display\" />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Home;\n"],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}