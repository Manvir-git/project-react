{"ast":null,"code":"var _jsxFileName = \"/Users/manvirsingh/Documents/react1/project/src/components/PumpDetails.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import '../css/read.css'; // Import your custom CSS for styling\n\n// const PumpDetails = () => {\n//     const { pumpId } = useParams(); // Extract pumpId from the URL\n//     const navigate = useNavigate();\n\n//     const [pump, setPump] = useState(null); // State to hold pump data\n//     const [loading, setLoading] = useState(true); // Loading state\n//     const [error, setError] = useState(null); // Error state\n\n//     // Fetch pump details from the API by ID\n//     useEffect(() => {\n//         const fetchPumpDetails = async () => {\n//             try {\n//                 // Fetch pump details based on the ID from the URL\n//                 const response = await fetch(`http://localhost:5001/api/agpumps/${pumpId}`);\n//                 console.log(pumpId);\n//                 // If the response is not OK, throw an error\n//                 if (!response.ok) {\n//                     throw new Error('Pump not found');\n//                 }\n\n//                 const data = await response.json();\n//                 setPump(data.pump); // Set the pump data from the API response\n//                 setLoading(false); // Set loading to false once the data is fetched\n//             } catch (err) {\n//                 setError(err.message); // Handle error if fetch fails\n//                 setLoading(false);\n//             }\n//         };\n\n//         fetchPumpDetails(); // Call the function to fetch pump details\n//     }, [pumpId]); // Re-run the effect when pumpId changes\n\n//     // Debugging logs\n//     console.log('Loading:', loading);\n//     console.log('Error:', error);\n//     console.log('Pump Data:', pump);\n\n//     if (loading) {\n//         return <div>Loading...</div>; // Show loading message while fetching data\n//     }\n\n//     if (error) {\n//         return <div>{error}. Please go back to the <a href=\"/products\">products page</a>.</div>; // Show error message if pump not found\n//     }\n\n//     if (!pump) {\n//         return <div>Pump not found. Please go back to the <a href=\"/products\">products page</a>.</div>; // Fallback if no pump data\n//     }\n\n//     return (\n//         <div className=\"body\">\n//             {/* Product Description */}\n//             <div className=\"product-description\">\n//                 {/* Display the pump image */}\n//                 <img \n//                     src={`http://localhost:5001/uploads/${pump.image}`} \n//                     alt={pump.name} \n//                     className=\"product-image\" \n//                 />\n//                 <div>\n//                     <h1>{pump.name}</h1>\n//                     <p><strong>Price:</strong> {pump.price} (Inclusive of all taxes)</p>\n\n//                     <div className=\"features\">\n//                         <h2>Features</h2>\n//                         <ul>\n//                             {Array.isArray(pump.features) && pump.features.length > 0 ? (\n//                                 pump.features.map((feature, index) => (\n//                                     <li key={index}>{feature}</li>\n//                                 ))\n//                             ) : (\n//                                 <li>No features available.</li> // Fallback message if features are empty or undefined\n//                             )}\n//                         </ul>\n//                     </div>\n\n//                     {/* Send Enquiry Button */}\n//                     <a \n//                         href=\"https://lallytradingcompany.onrender.com\" \n//                         className=\"buy-button\"\n//                     >\n//                         Send Enquiry\n//                     </a>\n//                 </div>\n//             </div>\n\n//             {/* Optional: Display additional pump details */}\n//             {pump.rightImage && (\n//                 <div className=\"chart\">\n//                     <h3>Technical Details</h3>\n//                     <img \n//                         src={`http://localhost:5001/uploads/${pump.rightImage}`} \n//                         alt=\"Right view of pump\" \n//                         className=\"product-image\" \n//                     />\n//                 </div>\n//             )}\n\n//             {/* Navigation Button to go back */}\n//             <div className=\"navigation-buttons\">\n//                 <button \n//                     className=\"nav-btn left-btn\"\n//                     onClick={() => navigate('/products')} // Navigate back to product list\n//                 >\n//                     &#8592; Back to Product List\n//                 </button>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default PumpDetails;\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport '../css/read.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PumpDetails = () => {\n  _s();\n  const {\n    pumpId\n  } = useParams(); // Extract pumpId from URL\n  const navigate = useNavigate();\n  const [pump, setPump] = useState(null); // State to hold pump data\n  const [agriculturePump, setAgriculturePump] = useState(null); // State for agricultural pump\n  const [loading, setLoading] = useState(true); // Loading state\n  const [error, setError] = useState(null); // Error state\n\n  // Fetch residential pump details based on the pumpId\n  useEffect(() => {\n    const fetchPumpDetails = async () => {\n      try {\n        // Call the API to fetch pump data based on the ID from the URL\n        const response = await fetch(`http://localhost:5001/api/pumps/${pumpId}`);\n        if (!response.ok) {\n          throw new Error('Pump not found');\n        }\n        const data = await response.json();\n        setPump(data.pump); // Set the pump data from the API (data.pump)\n        setLoading(false); // Set loading to false once data is fetched\n      } catch (err) {\n        setError(err.message); // Handle error if data fetch fails\n        setLoading(false);\n      }\n    };\n    fetchPumpDetails(); // Call the function to fetch pump details\n  }, [pumpId]); // Re-run the effect when pumpId changes\n\n  // Fetch agricultural pump details by ID\n  useEffect(() => {\n    const fetchAgriculturalPumpDetails = async () => {\n      try {\n        // Call the API to fetch agricultural pump data based on the ID\n        const response = await fetch(`http://localhost:5001/api/agpumps/${pumpId}`);\n        if (!response.ok) {\n          throw new Error('Agricultural pump not found');\n        }\n        const data = await response.json();\n        setAgriculturePump(data.pump); // Set the agricultural pump data from the API (data.pump)\n      } catch (err) {\n        setError(err.message); // Handle error if data fetch fails\n      }\n    };\n    fetchAgriculturalPumpDetails(); // Fetch agricultural pump details when component mounts\n  }, [pumpId]); // Re-run the effect when pumpId changes\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 16\n    }, this); // Show loading message while fetching data\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [error, \". Please go back to the \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/products\",\n        children: \"products page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 52\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 16\n    }, this); // Show error message if pump not found\n  }\n  if (!pump && !agriculturePump) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Pump not found. Please go back to the \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/products\",\n        children: \"products page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 59\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 16\n    }, this); // Fallback if no pump data\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [pump && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:5001/uploads/${pump.image}`,\n        className: \"product-image\",\n        alt: pump.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: pump.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"MRP:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 28\n          }, this), \" \", pump.price, \" (Inclusive of all taxes)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"features\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Features\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Array.isArray(pump.features) && pump.features.length > 0 ? pump.features.map((feature, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: feature\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 41\n            }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"No features available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://lallytradingcompany.onrender.com\",\n          className: \"buy-button\",\n          children: \"Send Enquiry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }, this), agriculturePump && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"agriculture-pump-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Agricultural Pump Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:5001/uploads/${agriculturePump.image}`,\n        alt: agriculturePump.name,\n        className: \"product-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: agriculturePump.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 28\n          }, this), \" \", agriculturePump.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"features\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Features\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Array.isArray(agriculturePump.features) && agriculturePump.features.length > 0 ? agriculturePump.features.map((feature, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: feature\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 41\n            }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"No features available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://lallytradingcompany.onrender.com\",\n          className: \"buy-button\",\n          children: \"Send Enquiry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-btn left-btn\",\n        onClick: () => navigate(`/pumpDetail/${pumpId}`),\n        children: \"\\u2190 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-btn right-btn\",\n        onClick: () => navigate(`/pumpDetail/${pumpId}`),\n        children: \"\\u2192 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n};\n_s(PumpDetails, \"AH++hle/qsxFVrahzpIgBcOrBXU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PumpDetails;\nexport default PumpDetails;\nvar _c;\n$RefreshReg$(_c, \"PumpDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","PumpDetails","_s","pumpId","navigate","pump","setPump","agriculturePump","setAgriculturePump","loading","setLoading","error","setError","fetchPumpDetails","response","fetch","ok","Error","data","json","err","message","fetchAgriculturalPumpDetails","children","fileName","_jsxFileName","lineNumber","columnNumber","href","className","src","image","alt","name","price","Array","isArray","features","length","map","feature","index","onClick","_c","$RefreshReg$"],"sources":["/Users/manvirsingh/Documents/react1/project/src/components/PumpDetails.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import '../css/read.css'; // Import your custom CSS for styling\n\n// const PumpDetails = () => {\n//     const { pumpId } = useParams(); // Extract pumpId from the URL\n//     const navigate = useNavigate();\n\n//     const [pump, setPump] = useState(null); // State to hold pump data\n//     const [loading, setLoading] = useState(true); // Loading state\n//     const [error, setError] = useState(null); // Error state\n\n//     // Fetch pump details from the API by ID\n//     useEffect(() => {\n//         const fetchPumpDetails = async () => {\n//             try {\n//                 // Fetch pump details based on the ID from the URL\n//                 const response = await fetch(`http://localhost:5001/api/agpumps/${pumpId}`);\n//                 console.log(pumpId);\n//                 // If the response is not OK, throw an error\n//                 if (!response.ok) {\n//                     throw new Error('Pump not found');\n//                 }\n\n//                 const data = await response.json();\n//                 setPump(data.pump); // Set the pump data from the API response\n//                 setLoading(false); // Set loading to false once the data is fetched\n//             } catch (err) {\n//                 setError(err.message); // Handle error if fetch fails\n//                 setLoading(false);\n//             }\n//         };\n\n//         fetchPumpDetails(); // Call the function to fetch pump details\n//     }, [pumpId]); // Re-run the effect when pumpId changes\n\n//     // Debugging logs\n//     console.log('Loading:', loading);\n//     console.log('Error:', error);\n//     console.log('Pump Data:', pump);\n\n//     if (loading) {\n//         return <div>Loading...</div>; // Show loading message while fetching data\n//     }\n\n//     if (error) {\n//         return <div>{error}. Please go back to the <a href=\"/products\">products page</a>.</div>; // Show error message if pump not found\n//     }\n\n//     if (!pump) {\n//         return <div>Pump not found. Please go back to the <a href=\"/products\">products page</a>.</div>; // Fallback if no pump data\n//     }\n\n//     return (\n//         <div className=\"body\">\n//             {/* Product Description */}\n//             <div className=\"product-description\">\n//                 {/* Display the pump image */}\n//                 <img \n//                     src={`http://localhost:5001/uploads/${pump.image}`} \n//                     alt={pump.name} \n//                     className=\"product-image\" \n//                 />\n//                 <div>\n//                     <h1>{pump.name}</h1>\n//                     <p><strong>Price:</strong> {pump.price} (Inclusive of all taxes)</p>\n\n//                     <div className=\"features\">\n//                         <h2>Features</h2>\n//                         <ul>\n//                             {Array.isArray(pump.features) && pump.features.length > 0 ? (\n//                                 pump.features.map((feature, index) => (\n//                                     <li key={index}>{feature}</li>\n//                                 ))\n//                             ) : (\n//                                 <li>No features available.</li> // Fallback message if features are empty or undefined\n//                             )}\n//                         </ul>\n//                     </div>\n\n//                     {/* Send Enquiry Button */}\n//                     <a \n//                         href=\"https://lallytradingcompany.onrender.com\" \n//                         className=\"buy-button\"\n//                     >\n//                         Send Enquiry\n//                     </a>\n//                 </div>\n//             </div>\n\n//             {/* Optional: Display additional pump details */}\n//             {pump.rightImage && (\n//                 <div className=\"chart\">\n//                     <h3>Technical Details</h3>\n//                     <img \n//                         src={`http://localhost:5001/uploads/${pump.rightImage}`} \n//                         alt=\"Right view of pump\" \n//                         className=\"product-image\" \n//                     />\n//                 </div>\n//             )}\n\n//             {/* Navigation Button to go back */}\n//             <div className=\"navigation-buttons\">\n//                 <button \n//                     className=\"nav-btn left-btn\"\n//                     onClick={() => navigate('/products')} // Navigate back to product list\n//                 >\n//                     &#8592; Back to Product List\n//                 </button>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default PumpDetails;\n\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport '../css/read.css';\n\nconst PumpDetails = () => {\n    const { pumpId } = useParams(); // Extract pumpId from URL\n    const navigate = useNavigate();\n\n    const [pump, setPump] = useState(null); // State to hold pump data\n    const [agriculturePump, setAgriculturePump] = useState(null); // State for agricultural pump\n    const [loading, setLoading] = useState(true); // Loading state\n    const [error, setError] = useState(null); // Error state\n\n    // Fetch residential pump details based on the pumpId\n    useEffect(() => {\n        const fetchPumpDetails = async () => {\n            try {\n                // Call the API to fetch pump data based on the ID from the URL\n                const response = await fetch(`http://localhost:5001/api/pumps/${pumpId}`);\n                \n                if (!response.ok) {\n                    throw new Error('Pump not found');\n                }\n\n                const data = await response.json();\n                setPump(data.pump); // Set the pump data from the API (data.pump)\n                setLoading(false); // Set loading to false once data is fetched\n            } catch (err) {\n                setError(err.message); // Handle error if data fetch fails\n                setLoading(false);\n            }\n        };\n\n        fetchPumpDetails(); // Call the function to fetch pump details\n    }, [pumpId]); // Re-run the effect when pumpId changes\n\n    // Fetch agricultural pump details by ID\n    useEffect(() => {\n        const fetchAgriculturalPumpDetails = async () => {\n            try {\n                // Call the API to fetch agricultural pump data based on the ID\n                const response = await fetch(`http://localhost:5001/api/agpumps/${pumpId}`);\n                \n                if (!response.ok) {\n                    throw new Error('Agricultural pump not found');\n                }\n\n                const data = await response.json();\n                setAgriculturePump(data.pump); // Set the agricultural pump data from the API (data.pump)\n            } catch (err) {\n                setError(err.message); // Handle error if data fetch fails\n            }\n        };\n\n        fetchAgriculturalPumpDetails(); // Fetch agricultural pump details when component mounts\n    }, [pumpId]); // Re-run the effect when pumpId changes\n\n    if (loading) {\n        return <div>Loading...</div>; // Show loading message while fetching data\n    }\n\n    if (error) {\n        return <div>{error}. Please go back to the <a href=\"/products\">products page</a>.</div>; // Show error message if pump not found\n    }\n\n    if (!pump && !agriculturePump) {\n        return <div>Pump not found. Please go back to the <a href=\"/products\">products page</a>.</div>; // Fallback if no pump data\n    }\n\n    return (\n        <div className=\"body\">\n            {/* Display Residential Pump Details */}\n            {pump && (\n                <div className=\"product-description\">\n                    <img \n                        src={`http://localhost:5001/uploads/${pump.image}`} \n                        className=\"product-image\" \n                        alt={pump.name} \n                    />\n                    <div>\n                        <h1>{pump.name}</h1>\n                        <p><strong>MRP:</strong> {pump.price} (Inclusive of all taxes)</p>\n\n                        <div className=\"features\">\n                            <h2>Features</h2>\n                            <ul>\n                                {Array.isArray(pump.features) && pump.features.length > 0 ? (\n                                    pump.features.map((feature, index) => (\n                                        <li key={index}>{feature}</li>\n                                    ))\n                                ) : (\n                                    <li>No features available.</li>\n                                )}\n                            </ul>\n                        </div>\n\n                        <a \n                            href=\"https://lallytradingcompany.onrender.com\" \n                            className=\"buy-button\"\n                        >\n                            Send Enquiry\n                        </a>\n                    </div>\n                </div>\n            )}\n\n            {/* Display Agricultural Pump Details */}\n            {agriculturePump && (\n                <div className=\"agriculture-pump-description\">\n                    <h2>Agricultural Pump Details</h2>\n                    <img \n                        src={`http://localhost:5001/uploads/${agriculturePump.image}`} \n                        alt={agriculturePump.name} \n                        className=\"product-image\" \n                    />\n                    <div>\n                        <h3>{agriculturePump.name}</h3>\n                        <p><strong>Price:</strong> {agriculturePump.price}</p>\n\n                        <div className=\"features\">\n                            <h4>Features</h4>\n                            <ul>\n                                {Array.isArray(agriculturePump.features) && agriculturePump.features.length > 0 ? (\n                                    agriculturePump.features.map((feature, index) => (\n                                        <li key={index}>{feature}</li>\n                                    ))\n                                ) : (\n                                    <li>No features available.</li>\n                                )}\n                            </ul>\n                        </div>\n\n                        <a \n                            href=\"https://lallytradingcompany.onrender.com\" \n                            className=\"buy-button\"\n                        >\n                            Send Enquiry\n                        </a>\n                    </div>\n                </div>\n            )}\n\n            {/* Navigation Buttons */}\n            <div className=\"navigation-buttons\">\n                <button \n                    className=\"nav-btn left-btn\"\n                    onClick={() => navigate(`/pumpDetail/${pumpId}`)}\n                >\n                    &#8592; {/* Left Arrow (back) */}\n                </button>\n                <button \n                    className=\"nav-btn right-btn\"\n                    onClick={() => navigate(`/pumpDetail/${pumpId}`)}\n                >\n                    &#8594; {/* Right Arrow (forward) */}\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default PumpDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}