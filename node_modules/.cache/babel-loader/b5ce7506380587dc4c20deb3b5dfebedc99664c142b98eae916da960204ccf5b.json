{"ast":null,"code":"import React from'react';import{useParams,useNavigate}from'react-router-dom';import'../css/read.css';import{pumps}from'../data/pumps';// Ensure this path is correct\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PumpDetail=()=>{const{pumpId}=useParams();// Extract the pumpId from the URL\nconst navigate=useNavigate();// Ensure pumpId is valid by finding the corresponding pump\nconst pump=pumps.find(p=>p.id===pumpId);if(!pump){// If no pump found, show an error message\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[\"Pump not found. Please go back to the \",/*#__PURE__*/_jsx(\"a\",{href:\"/products\",children:\"products page\"}),\".\"]});}// Create an array of pump IDs in the order they appear\nconst pumpIds=pumps.map(p=>p.id);// Find the index of the current pump\nconst currentIndex=pumpIds.indexOf(pumpId);// Determine the previous and next pump IDs (circular navigation)\nconst prevPump=pumpIds[(currentIndex-1+pumpIds.length)%pumpIds.length];const nextPump=pumpIds[(currentIndex+1)%pumpIds.length];// Function to navigate to a specific pump detail\nconst handleNavigation=id=>{navigate(`/pumpDetail/${id}`);};return/*#__PURE__*/_jsxs(\"div\",{className:\"body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"product-description\",children:[/*#__PURE__*/_jsx(\"img\",{src:pump.image,className:\"product-image\",alt:pump.name}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:pump.name}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"MRP:\"}),\" \",pump.price,\" (Inclusive of all taxes)\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"features\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Features\"}),/*#__PURE__*/_jsx(\"ul\",{children:pump.features.map((feature,index)=>/*#__PURE__*/_jsx(\"li\",{children:feature},index))})]}),/*#__PURE__*/_jsx(\"a\",{href:\"https://lallytradingcompany.onrender.com\",className:\"buy-button\",children:\"Send Enquiry\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chart\",children:/*#__PURE__*/_jsx(\"img\",{src:pump.rightImage,alt:\"Right view of pump\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"navigation-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"nav-btn left-btn\",onClick:()=>handleNavigation(prevPump),children:\"\\u2190 \"}),/*#__PURE__*/_jsx(\"button\",{className:\"nav-btn right-btn\",onClick:()=>handleNavigation(nextPump),children:\"\\u2192 \"})]})]});};export default PumpDetail;","map":{"version":3,"names":["React","useParams","useNavigate","pumps","jsx","_jsx","jsxs","_jsxs","PumpDetail","pumpId","navigate","pump","find","p","id","children","href","pumpIds","map","currentIndex","indexOf","prevPump","length","nextPump","handleNavigation","className","src","image","alt","name","price","features","feature","index","rightImage","onClick"],"sources":["/Users/manvirsingh/Documents/react1/project/src/components/PumpDetail.js"],"sourcesContent":["import React from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport '../css/read.css'; \nimport { pumps } from '../data/pumps'; // Ensure this path is correct\n\nconst PumpDetail = () => {\n    const { pumpId } = useParams(); // Extract the pumpId from the URL\n    const navigate = useNavigate();\n\n    // Ensure pumpId is valid by finding the corresponding pump\n    const pump = pumps.find(p => p.id === pumpId);\n\n    if (!pump) {\n        // If no pump found, show an error message\n        return <div>Pump not found. Please go back to the <a href=\"/products\">products page</a>.</div>;\n    }\n\n    // Create an array of pump IDs in the order they appear\n    const pumpIds = pumps.map(p => p.id);\n\n    // Find the index of the current pump\n    const currentIndex = pumpIds.indexOf(pumpId);\n\n    // Determine the previous and next pump IDs (circular navigation)\n    const prevPump = pumpIds[(currentIndex - 1 + pumpIds.length) % pumpIds.length]; \n    const nextPump = pumpIds[(currentIndex + 1) % pumpIds.length];\n\n    // Function to navigate to a specific pump detail\n    const handleNavigation = (id) => {\n        navigate(`/pumpDetail/${id}`);\n    };\n\n    return (\n        <div className=\"body\">\n\n            {/* Product Description */}\n            <div className=\"product-description\">\n                <img src={pump.image} className=\"product-image\" alt={pump.name} />\n                <div>\n                    <h1>{pump.name}</h1>\n                    <p><strong>MRP:</strong> {pump.price} (Inclusive of all taxes)</p>\n\n                    <div className=\"features\">\n                        <h2>Features</h2>\n                        <ul>\n                            {pump.features.map((feature, index) => (\n                                <li key={index}>{feature}</li>\n                            ))}\n                        </ul>\n                    </div>\n\n                    <a href=\"https://lallytradingcompany.onrender.com\" className=\"buy-button\">Send Enquiry</a>\n                </div>\n            </div>\n\n            {/* Image for right view of the pump */}\n            <div className=\"chart\">\n                <img src={pump.rightImage} alt=\"Right view of pump\" />\n            </div>\n\n            {/* Navigation Buttons */}\n            <div className=\"navigation-buttons\">\n                <button \n                    className=\"nav-btn left-btn\"\n                    onClick={() => handleNavigation(prevPump)}\n                >\n                    &#8592; {/* Left Arrow (back) */}\n                </button>\n                <button \n                    className=\"nav-btn right-btn\"\n                    onClick={() => handleNavigation(nextPump)}\n                >\n                    &#8594; {/* Right Arrow (forward) */}\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default PumpDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}