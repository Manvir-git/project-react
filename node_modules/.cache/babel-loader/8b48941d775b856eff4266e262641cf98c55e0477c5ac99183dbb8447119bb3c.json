{"ast":null,"code":"var _jsxFileName = \"/Users/manvirsingh/Documents/react1/project/src/components/PumpDetail.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport pumps from '../data/pumps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PumpDetail = () => {\n  _s();\n  const {\n    pumpId\n  } = useParams(); // Get pumpId from URL\n  console.log(\"Pump ID from URL:\", pumpId); // Log the pumpId\n  console.log(\"Available pumps:\", pumps); // Log the pumps array\n\n  // Find the pump that matches the pumpId\n  const pump = pumps.find(p => p.id === String(pumpId).trim());\n\n  // Error handling for undefined pump\n  if (!pump) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pump not found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: pump.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: pump.image,\n      alt: pump.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Features\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pump.features.map((feature, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: feature\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: pump.rightImage,\n      alt: `Right view of ${pump.name}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(PumpDetail, \"euopTX/UUZaMzDnrudF44U2cOQg=\", false, function () {\n  return [useParams];\n});\n_c = PumpDetail;\nexport default PumpDetail;\nvar _c;\n$RefreshReg$(_c, \"PumpDetail\");","map":{"version":3,"names":["React","useParams","pumps","jsxDEV","_jsxDEV","PumpDetail","_s","pumpId","console","log","pump","find","p","id","String","trim","children","fileName","_jsxFileName","lineNumber","columnNumber","name","src","image","alt","features","map","feature","index","rightImage","_c","$RefreshReg$"],"sources":["/Users/manvirsingh/Documents/react1/project/src/components/PumpDetail.js"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport pumps from '../data/pumps';\n\nconst PumpDetail = () => {\n    const { pumpId } = useParams(); // Get pumpId from URL\n    console.log(\"Pump ID from URL:\", pumpId); // Log the pumpId\n    console.log(\"Available pumps:\", pumps); // Log the pumps array\n\n    // Find the pump that matches the pumpId\n    const pump = pumps.find(p => p.id === String(pumpId).trim()); \n\n    // Error handling for undefined pump\n    if (!pump) {\n        return <h2>Pump not found!</h2>;\n    }\n\n    return (\n        <div>\n            <h1>{pump.name}</h1>\n            <img src={pump.image} alt={pump.name} />\n            <h2>Features</h2>\n            <ul>\n                {pump.features.map((feature, index) => (\n                    <li key={index}>{feature}</li>\n                ))}\n            </ul>\n            <img src={pump.rightImage} alt={`Right view of ${pump.name}`} />\n        </div>\n    );\n};\n\nexport default PumpDetail;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAO,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;EAChCO,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,MAAM,CAAC,CAAC,CAAC;EAC1CC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEP,KAAK,CAAC,CAAC,CAAC;;EAExC;EACA,MAAMQ,IAAI,GAAGR,KAAK,CAACS,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKC,MAAM,CAACP,MAAM,CAAC,CAACQ,IAAI,CAAC,CAAC,CAAC;;EAE5D;EACA,IAAI,CAACL,IAAI,EAAE;IACP,oBAAON,OAAA;MAAAY,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACnC;EAEA,oBACIhB,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAKN,IAAI,CAACW;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpBhB,OAAA;MAAKkB,GAAG,EAAEZ,IAAI,CAACa,KAAM;MAACC,GAAG,EAAEd,IAAI,CAACW;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxChB,OAAA;MAAAY,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBhB,OAAA;MAAAY,QAAA,EACKN,IAAI,CAACe,QAAQ,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC9BxB,OAAA;QAAAY,QAAA,EAAiBW;MAAO,GAAfC,KAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACLhB,OAAA;MAAKkB,GAAG,EAAEZ,IAAI,CAACmB,UAAW;MAACL,GAAG,EAAE,iBAAiBd,IAAI,CAACW,IAAI;IAAG;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEd,CAAC;AAACd,EAAA,CA1BID,UAAU;EAAA,QACOJ,SAAS;AAAA;AAAA6B,EAAA,GAD1BzB,UAAU;AA4BhB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}