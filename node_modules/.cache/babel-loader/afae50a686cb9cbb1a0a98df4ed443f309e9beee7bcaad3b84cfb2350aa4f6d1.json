{"ast":null,"code":"\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n// import '../css/Admin.css';\n\n// const AdminPortal = () => {\n//   const [residentialPumps, setResidentialPumps] = useState([]);\n//   const [agriculturalPumps, setAgriculturalPumps] = useState([]);\n//   const [error, setError] = useState(null);\n//   const [currentView, setCurrentView] = useState('residential');\n//   const [showAddForm, setShowAddForm] = useState(false);\n//   const [pumpType, setPumpType] = useState('residential');\n//   const [newPumpData, setNewPumpData] = useState({\n//     id: '',\n//     name: '',\n//     price: '',\n//     features: '',\n//     image: null,\n//     rightImage: null\n//   });\n\n//   // Fetch residential pumps data\n//   useEffect(() => {\n//     axios\n//       .get('http://localhost:5001/api/pumps')\n//       .then((response) => setResidentialPumps(response.data))\n//       .catch((error) => console.error('Error fetching residential pumps:', error));\n//   }, []);\n\n//   // Fetch agricultural pumps data\n//   useEffect(() => {\n//     axios\n//       .get('http://localhost:5001/api/agpumps')\n//       .then((response) => setAgriculturalPumps(response.data))\n//       .catch((error) => console.error('Error fetching agricultural pumps:', error));\n//   }, []);\n\n//   // Handle multiple image upload\n//   const handleMultipleImageUpload = (e) => {\n//     setNewPumpData(prev => ({\n//       ...prev,\n//       image: e.target.files[0]\n//     }));\n//   };\n\n//   // Handle right image upload\n//   const handleRightImageUpload = (e) => {\n//     setNewPumpData(prev => ({\n//       ...prev,\n//       rightImage: e.target.files[0]\n//     }));\n//   };\n\n//   // Handle input change\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewPumpData(prev => ({\n//       ...prev,\n//       [name]: value\n//     }));\n//   };\n\n//   // Handle pump type change\n//   const handlePumpTypeChange = (e) => {\n//     setPumpType(e.target.value);\n//   };\n\n//   // Handle form submission\n//   const handleAddPump = async (e) => {\n//     e.preventDefault();\n\n//     // Enhanced validation including features\n//     if (!newPumpData.id || !newPumpData.name || !newPumpData.price) {\n//       setError('Please fill in all required fields');\n//       return;\n//     }\n\n//     // Initialize FormData\n//     const formData = new FormData();\n\n//     // Handle features array properly\n//     if (typeof newPumpData.features === 'string') {\n//       // If features is a comma-separated string, convert to array\n//       const featuresArray = newPumpData.features\n//         .split(',')\n//         .map(feature => feature.trim())\n//         .filter(feature => feature.length > 0);\n//       formData.append('features', JSON.stringify(featuresArray));\n//     } else if (Array.isArray(newPumpData.features)) {\n//       // If features is already an array, stringify it\n//       formData.append('features', JSON.stringify(newPumpData.features));\n//     } else {\n//       // Initialize empty array if no features provided\n//       formData.append('features', JSON.stringify([]));\n//     }\n\n//     // Append basic fields\n//     formData.append('id', newPumpData.id);\n//     formData.append('name', newPumpData.name);\n//     formData.append('price', newPumpData.price);\n\n//     // Enhanced image handling\n//     if (newPumpData.image) {\n//       formData.append('image', newPumpData.image);\n//     }\n//     if (newPumpData.rightImage) {\n//       formData.append('rightImage', newPumpData.rightImage);\n//     }\n\n//     try {\n//       const endpoint = pumpType === 'residential' \n//         ? 'http://localhost:5001/api/pumps' \n//         : 'http://localhost:5001/api/agpumps';\n\n//       const response = await axios.post(endpoint, formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//         }\n//       });\n\n//       if (response.status !== 200 && response.status !== 201) {\n//         throw new Error(`Server responded with status ${response.status}: ${JSON.stringify(response.data)}`);\n//       }\n\n//       // Process the response\n//       const newPump = response.data.pump || response.data;\n\n//       // Ensure the image paths are complete\n//       const processedPump = {\n//         ...newPump,\n//         image: newPump.image?.startsWith('http') \n//           ? newPump.image \n//           : `http://localhost:5001${newPump.image}`,\n//         rightImage: newPump.rightImage?.startsWith('http') \n//           ? newPump.rightImage \n//           : `http://localhost:5001${newPump.rightImage}`\n//       };\n\n//       // Update the appropriate pump list with processed data\n//       if (pumpType === 'residential') {\n//         setResidentialPumps(prev => [...prev, processedPump]);\n//       } else {\n//         setAgriculturalPumps(prev => [...prev, processedPump]);\n//       }\n\n//       // Reset form with empty features array\n//       setNewPumpData({\n//         id: '',\n//         name: '',\n//         price: '',\n//         features: [],\n//         image: null,\n//         rightImage: null\n//       });\n\n//       setShowAddForm(false);\n//       setError(null);\n//       alert('Pump added successfully!');\n\n//     } catch (error) {\n//       console.error('Error details:', {\n//         message: error.message,\n//         response: error.response?.data,\n//         status: error.response?.status\n//       });\n\n//       let errorMessage = 'Error adding pump. ';\n//       if (error.response) {\n//         errorMessage += error.response.data.message || 'Unknown server error';\n//       } else if (error.request) {\n//         errorMessage += 'No response from server. Please check your connection.';\n//       } else {\n//         errorMessage += error.message;\n//       }\n//       setError(errorMessage);\n//     }\n//   };\n\n//   // Handle delete pump\n//   const handleDeletePump = async (id, type) => {\n//     try {\n//       const endpoint = type === 'residential' \n//         ? `http://localhost:5001/api/pumps/${id}`\n//         : `http://localhost:5001/api/agpumps/${id}`;\n\n//       await axios.delete(endpoint);\n\n//       if (type === 'residential') {\n//         setResidentialPumps(prev => prev.filter(pump => pump.id !== id));\n//       } else {\n//         setAgriculturalPumps(prev => prev.filter(pump => pump.id !== id));\n//       }\n//     } catch (error) {\n//       console.error('Error deleting pump:', error);\n//       setError('Error deleting pump.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"admin-portal\">\n//       <h1>Admin Portal</h1>\n\n//       <div className=\"sidebar\">\n//         <button\n//           className={`sidebar-btn ${currentView === 'residential' ? 'active' : ''}`}\n//           onClick={() => setCurrentView('residential')}\n//         >\n//           Residential Pumps\n//         </button>\n//         <button\n//           className={`sidebar-btn ${currentView === 'agricultural' ? 'active' : ''}`}\n//           onClick={() => setCurrentView('agricultural')}\n//         >\n//           Agricultural Pumps\n//         </button>\n//       </div>\n\n//       <div className=\"gallery-container\">\n//         <div className=\"add-new-pump\" onClick={() => setShowAddForm(true)}>\n//           <span className=\"plus-sign\">+</span>\n//           <p className=\"add-text\">Add New Pump</p>\n//         </div>\n//       </div>\n\n//       {showAddForm && (\n//         <div className=\"add-pump-form\">\n//           <h2>Add New Pump</h2>\n//           {error && <p className=\"error\">{error}</p>}\n//           <form onSubmit={handleAddPump}>\n//             <select\n//               name=\"pumpType\"\n//               value={pumpType}\n//               onChange={handlePumpTypeChange}\n//               className=\"pump-type-select\"\n//               required\n//             >\n//               <option value=\"residential\">Residential Pump</option>\n//               <option value=\"agricultural\">Agricultural Pump</option>\n//             </select>\n\n//             <input\n//               type=\"text\"\n//               name=\"id\"\n//               value={newPumpData.id}\n//               onChange={handleInputChange}\n//               placeholder=\"Pump ID\"\n//               required\n//             />\n//             <input\n//               type=\"text\"\n//               name=\"name\"\n//               value={newPumpData.name}\n//               onChange={handleInputChange}\n//               placeholder=\"Pump Name\"\n//               required\n//             />\n//             <input\n//               type=\"text\"\n//               name=\"price\"\n//               value={newPumpData.price}\n//               onChange={handleInputChange}\n//               placeholder=\"Pump Price\"\n//               required\n//             />\n//             <textarea\n//               name=\"features\"\n//               value={newPumpData.features}\n//               onChange={handleInputChange}\n//               placeholder=\"Features (comma-separated)\"\n//               required\n//             />\n//             <div className=\"file-input-container\">\n//               <label>Main Image:</label>\n//               <input \n//                 type=\"file\" \n//                 onChange={handleMultipleImageUpload} \n//                 required \n//               />\n//             </div>\n//             <div className=\"file-input-container\">\n//               <label>Right Image:</label>\n//               <input \n//                 type=\"file\" \n//                 onChange={handleRightImageUpload} \n//                 required \n//               />\n//             </div>\n//             <div className=\"form-buttons\">\n//               <button type=\"submit\">Add Pump</button>\n//               <button type=\"button\" onClick={() => setShowAddForm(false)}>Cancel</button>\n//             </div>\n//           </form>\n//         </div>\n//       )}\n\n//       <div className=\"gallery-container\">\n//         <div className=\"pump-gallery\">\n//           {currentView === 'residential' && (\n//             <>\n//               <h2>Residential Pumps</h2>\n//               {residentialPumps.length > 0 ? (\n//                 residentialPumps.map((pump) => (\n//                   <div key={pump.id} className=\"pump-item animate-on-scroll\">\n//                     <img src={`http://localhost:5001/uploads/${pump.image}`} alt={pump.name} />\n//                     <div className=\"pump-info\">\n//                       <p className=\"pump-name\">{pump.name}</p>\n//                       <p className=\"pump-price\">{pump.price}</p>\n//                       <Link to={`/pumpDetail/${pump.id}`} className=\"read-more-btn\">\n//                         Read more\n//                       </Link>\n//                       <button \n//                         className=\"delete-btn\" \n//                         onClick={() => handleDeletePump(pump.id, 'residential')}\n//                       >\n//                         Delete\n//                       </button>\n//                     </div>\n//                   </div>\n//                 ))\n//               ) : (\n//                 <p>Loading Residential Pumps...</p>\n//               )}\n//             </>\n//           )}\n\n//           {currentView === 'agricultural' && (\n//             <>\n//               <h2>Agricultural Pumps</h2>\n//               {agriculturalPumps.length > 0 ? (\n//                 agriculturalPumps.map((pump) => (\n//                   <div key={pump.id} className=\"pump-item animate-on-scroll\">\n//                     <img src={`http://localhost:5001/uploads/${pump.image}`} alt={pump.name} />\n//                     <div className=\"pump-info\">\n//                       <p className=\"pump-name\">{pump.name}</p>\n//                       <p className=\"pump-price\">{pump.price}</p>\n//                       <Link to={`/pumpDetails/${pump.id}`} className=\"read-more-btn\">\n//                         Read more\n//                       </Link>\n//                       <button \n//                         className=\"delete-btn\" \n//                         onClick={() => handleDeletePump(pump.id, 'agricultural')}\n//                       >\n//                         Delete\n//                       </button>\n//                     </div>\n//                   </div>\n//                 ))\n//               ) : (\n//                 <p>Loading Agricultural Pumps...</p>\n//               )}\n//             </>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AdminPortal;","map":{"version":3,"names":[],"sources":["/Users/manvirsingh/Documents/react1/project/src/AdminPortal/AdminPortal.js"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n// import '../css/Admin.css';\n\n// const AdminPortal = () => {\n//   const [residentialPumps, setResidentialPumps] = useState([]);\n//   const [agriculturalPumps, setAgriculturalPumps] = useState([]);\n//   const [error, setError] = useState(null);\n//   const [currentView, setCurrentView] = useState('residential');\n//   const [showAddForm, setShowAddForm] = useState(false);\n//   const [pumpType, setPumpType] = useState('residential');\n//   const [newPumpData, setNewPumpData] = useState({\n//     id: '',\n//     name: '',\n//     price: '',\n//     features: '',\n//     image: null,\n//     rightImage: null\n//   });\n\n//   // Fetch residential pumps data\n//   useEffect(() => {\n//     axios\n//       .get('http://localhost:5001/api/pumps')\n//       .then((response) => setResidentialPumps(response.data))\n//       .catch((error) => console.error('Error fetching residential pumps:', error));\n//   }, []);\n\n//   // Fetch agricultural pumps data\n//   useEffect(() => {\n//     axios\n//       .get('http://localhost:5001/api/agpumps')\n//       .then((response) => setAgriculturalPumps(response.data))\n//       .catch((error) => console.error('Error fetching agricultural pumps:', error));\n//   }, []);\n\n//   // Handle multiple image upload\n//   const handleMultipleImageUpload = (e) => {\n//     setNewPumpData(prev => ({\n//       ...prev,\n//       image: e.target.files[0]\n//     }));\n//   };\n\n//   // Handle right image upload\n//   const handleRightImageUpload = (e) => {\n//     setNewPumpData(prev => ({\n//       ...prev,\n//       rightImage: e.target.files[0]\n//     }));\n//   };\n\n//   // Handle input change\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewPumpData(prev => ({\n//       ...prev,\n//       [name]: value\n//     }));\n//   };\n\n//   // Handle pump type change\n//   const handlePumpTypeChange = (e) => {\n//     setPumpType(e.target.value);\n//   };\n\n//   // Handle form submission\n//   const handleAddPump = async (e) => {\n//     e.preventDefault();\n    \n//     // Enhanced validation including features\n//     if (!newPumpData.id || !newPumpData.name || !newPumpData.price) {\n//       setError('Please fill in all required fields');\n//       return;\n//     }\n  \n//     // Initialize FormData\n//     const formData = new FormData();\n    \n//     // Handle features array properly\n//     if (typeof newPumpData.features === 'string') {\n//       // If features is a comma-separated string, convert to array\n//       const featuresArray = newPumpData.features\n//         .split(',')\n//         .map(feature => feature.trim())\n//         .filter(feature => feature.length > 0);\n//       formData.append('features', JSON.stringify(featuresArray));\n//     } else if (Array.isArray(newPumpData.features)) {\n//       // If features is already an array, stringify it\n//       formData.append('features', JSON.stringify(newPumpData.features));\n//     } else {\n//       // Initialize empty array if no features provided\n//       formData.append('features', JSON.stringify([]));\n//     }\n  \n//     // Append basic fields\n//     formData.append('id', newPumpData.id);\n//     formData.append('name', newPumpData.name);\n//     formData.append('price', newPumpData.price);\n  \n//     // Enhanced image handling\n//     if (newPumpData.image) {\n//       formData.append('image', newPumpData.image);\n//     }\n//     if (newPumpData.rightImage) {\n//       formData.append('rightImage', newPumpData.rightImage);\n//     }\n  \n//     try {\n//       const endpoint = pumpType === 'residential' \n//         ? 'http://localhost:5001/api/pumps' \n//         : 'http://localhost:5001/api/agpumps';\n  \n//       const response = await axios.post(endpoint, formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//         }\n//       });\n  \n//       if (response.status !== 200 && response.status !== 201) {\n//         throw new Error(`Server responded with status ${response.status}: ${JSON.stringify(response.data)}`);\n//       }\n  \n//       // Process the response\n//       const newPump = response.data.pump || response.data;\n  \n//       // Ensure the image paths are complete\n//       const processedPump = {\n//         ...newPump,\n//         image: newPump.image?.startsWith('http') \n//           ? newPump.image \n//           : `http://localhost:5001${newPump.image}`,\n//         rightImage: newPump.rightImage?.startsWith('http') \n//           ? newPump.rightImage \n//           : `http://localhost:5001${newPump.rightImage}`\n//       };\n  \n//       // Update the appropriate pump list with processed data\n//       if (pumpType === 'residential') {\n//         setResidentialPumps(prev => [...prev, processedPump]);\n//       } else {\n//         setAgriculturalPumps(prev => [...prev, processedPump]);\n//       }\n  \n//       // Reset form with empty features array\n//       setNewPumpData({\n//         id: '',\n//         name: '',\n//         price: '',\n//         features: [],\n//         image: null,\n//         rightImage: null\n//       });\n  \n//       setShowAddForm(false);\n//       setError(null);\n//       alert('Pump added successfully!');\n  \n//     } catch (error) {\n//       console.error('Error details:', {\n//         message: error.message,\n//         response: error.response?.data,\n//         status: error.response?.status\n//       });\n  \n//       let errorMessage = 'Error adding pump. ';\n//       if (error.response) {\n//         errorMessage += error.response.data.message || 'Unknown server error';\n//       } else if (error.request) {\n//         errorMessage += 'No response from server. Please check your connection.';\n//       } else {\n//         errorMessage += error.message;\n//       }\n//       setError(errorMessage);\n//     }\n//   };\n\n//   // Handle delete pump\n//   const handleDeletePump = async (id, type) => {\n//     try {\n//       const endpoint = type === 'residential' \n//         ? `http://localhost:5001/api/pumps/${id}`\n//         : `http://localhost:5001/api/agpumps/${id}`;\n\n//       await axios.delete(endpoint);\n\n//       if (type === 'residential') {\n//         setResidentialPumps(prev => prev.filter(pump => pump.id !== id));\n//       } else {\n//         setAgriculturalPumps(prev => prev.filter(pump => pump.id !== id));\n//       }\n//     } catch (error) {\n//       console.error('Error deleting pump:', error);\n//       setError('Error deleting pump.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"admin-portal\">\n//       <h1>Admin Portal</h1>\n\n//       <div className=\"sidebar\">\n//         <button\n//           className={`sidebar-btn ${currentView === 'residential' ? 'active' : ''}`}\n//           onClick={() => setCurrentView('residential')}\n//         >\n//           Residential Pumps\n//         </button>\n//         <button\n//           className={`sidebar-btn ${currentView === 'agricultural' ? 'active' : ''}`}\n//           onClick={() => setCurrentView('agricultural')}\n//         >\n//           Agricultural Pumps\n//         </button>\n//       </div>\n\n//       <div className=\"gallery-container\">\n//         <div className=\"add-new-pump\" onClick={() => setShowAddForm(true)}>\n//           <span className=\"plus-sign\">+</span>\n//           <p className=\"add-text\">Add New Pump</p>\n//         </div>\n//       </div>\n\n//       {showAddForm && (\n//         <div className=\"add-pump-form\">\n//           <h2>Add New Pump</h2>\n//           {error && <p className=\"error\">{error}</p>}\n//           <form onSubmit={handleAddPump}>\n//             <select\n//               name=\"pumpType\"\n//               value={pumpType}\n//               onChange={handlePumpTypeChange}\n//               className=\"pump-type-select\"\n//               required\n//             >\n//               <option value=\"residential\">Residential Pump</option>\n//               <option value=\"agricultural\">Agricultural Pump</option>\n//             </select>\n\n//             <input\n//               type=\"text\"\n//               name=\"id\"\n//               value={newPumpData.id}\n//               onChange={handleInputChange}\n//               placeholder=\"Pump ID\"\n//               required\n//             />\n//             <input\n//               type=\"text\"\n//               name=\"name\"\n//               value={newPumpData.name}\n//               onChange={handleInputChange}\n//               placeholder=\"Pump Name\"\n//               required\n//             />\n//             <input\n//               type=\"text\"\n//               name=\"price\"\n//               value={newPumpData.price}\n//               onChange={handleInputChange}\n//               placeholder=\"Pump Price\"\n//               required\n//             />\n//             <textarea\n//               name=\"features\"\n//               value={newPumpData.features}\n//               onChange={handleInputChange}\n//               placeholder=\"Features (comma-separated)\"\n//               required\n//             />\n//             <div className=\"file-input-container\">\n//               <label>Main Image:</label>\n//               <input \n//                 type=\"file\" \n//                 onChange={handleMultipleImageUpload} \n//                 required \n//               />\n//             </div>\n//             <div className=\"file-input-container\">\n//               <label>Right Image:</label>\n//               <input \n//                 type=\"file\" \n//                 onChange={handleRightImageUpload} \n//                 required \n//               />\n//             </div>\n//             <div className=\"form-buttons\">\n//               <button type=\"submit\">Add Pump</button>\n//               <button type=\"button\" onClick={() => setShowAddForm(false)}>Cancel</button>\n//             </div>\n//           </form>\n//         </div>\n//       )}\n\n//       <div className=\"gallery-container\">\n//         <div className=\"pump-gallery\">\n//           {currentView === 'residential' && (\n//             <>\n//               <h2>Residential Pumps</h2>\n//               {residentialPumps.length > 0 ? (\n//                 residentialPumps.map((pump) => (\n//                   <div key={pump.id} className=\"pump-item animate-on-scroll\">\n//                     <img src={`http://localhost:5001/uploads/${pump.image}`} alt={pump.name} />\n//                     <div className=\"pump-info\">\n//                       <p className=\"pump-name\">{pump.name}</p>\n//                       <p className=\"pump-price\">{pump.price}</p>\n//                       <Link to={`/pumpDetail/${pump.id}`} className=\"read-more-btn\">\n//                         Read more\n//                       </Link>\n//                       <button \n//                         className=\"delete-btn\" \n//                         onClick={() => handleDeletePump(pump.id, 'residential')}\n//                       >\n//                         Delete\n//                       </button>\n//                     </div>\n//                   </div>\n//                 ))\n//               ) : (\n//                 <p>Loading Residential Pumps...</p>\n//               )}\n//             </>\n//           )}\n\n//           {currentView === 'agricultural' && (\n//             <>\n//               <h2>Agricultural Pumps</h2>\n//               {agriculturalPumps.length > 0 ? (\n//                 agriculturalPumps.map((pump) => (\n//                   <div key={pump.id} className=\"pump-item animate-on-scroll\">\n//                     <img src={`http://localhost:5001/uploads/${pump.image}`} alt={pump.name} />\n//                     <div className=\"pump-info\">\n//                       <p className=\"pump-name\">{pump.name}</p>\n//                       <p className=\"pump-price\">{pump.price}</p>\n//                       <Link to={`/pumpDetails/${pump.id}`} className=\"read-more-btn\">\n//                         Read more\n//                       </Link>\n//                       <button \n//                         className=\"delete-btn\" \n//                         onClick={() => handleDeletePump(pump.id, 'agricultural')}\n//                       >\n//                         Delete\n//                       </button>\n//                     </div>\n//                   </div>\n//                 ))\n//               ) : (\n//                 <p>Loading Agricultural Pumps...</p>\n//               )}\n//             </>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AdminPortal;"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}