{"ast":null,"code":"var _jsxFileName = \"/Users/manvirsingh/Documents/react1/project/src/components/AdminPortal.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n// import '../css/Admin.css'; // Ensure CSS file path is correct\n\n// const AdminPortal = () => {\n//   const [residentialPumps, setResidentialPumps] = useState([]);\n//   const [agriculturalPumps, setAgriculturalPumps] = useState([]);\n//   const [image, setImage] = useState(null);\n//   const [error, setError] = useState(null);\n//   const [currentView, setCurrentView] = useState('residential');\n//   const [showAddForm, setShowAddForm] = useState(false); // Manage visibility of the add pump form\n//   const [newPumpData, setNewPumpData] = useState({\n//     name: '',\n//     price: '',\n//     description: '',\n//     image: ''\n//   });\n\n//   // Fetch residential pumps data\n//   useEffect(() => {\n//     axios\n//       .get('http://localhost:5001/api/pumps')\n//       .then((response) => setResidentialPumps(response.data))\n//       .catch((error) => console.error('Error fetching residential pumps:', error));\n//   }, []);\n\n//   // Fetch agricultural pumps data\n//   useEffect(() => {\n//     axios\n//       .get('http://localhost:5001/api/agpumps')\n//       .then((response) => setAgriculturalPumps(response.data))\n//       .catch((error) => console.error('Error fetching agricultural pumps:', error));\n//   }, []);\n\n//   // Handle image upload\n//   const handleImageUpload = async (e) => {\n//     const files = e.target.files;\n//     const formData = new FormData();\n//     formData.append('image', files[0]);\n\n//     try {\n//       const response = await axios.post('http://localhost:5001/api/upload', formData);\n//       setImage(response.data.filePath); // Assuming backend returns filePath\n//     } catch (err) {\n//       console.error('Error uploading image:', err);\n//       setError('Error uploading image.');\n//     }\n//   };\n\n//   // Handle new pump form input change\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewPumpData((prevState) => ({\n//       ...prevState,\n//       [name]: value\n//     }));\n//   };\n\n//   // Handle adding new pump to the database\n//   const handleAddPump = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const pumpData = { ...newPumpData, image: image }; // Include image path in the pump data\n//       await axios.post('http://localhost:5001/api/pumps', pumpData);\n//       setShowAddForm(false); // Close the form after submitting\n//       setNewPumpData({ name: '', price: '', description: '', image: '' }); // Reset form data\n//       // Reload residential pumps after adding a new one\n//       const response = await axios.get('http://localhost:5001/api/pumps');\n//       setResidentialPumps(response.data);\n//     } catch (error) {\n//       console.error('Error adding new pump:', error);\n//       setError('Error adding new pump.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"admin-portal\">\n//       <h1>Admin Portal</h1>\n\n//       {/* Sidebar for toggling views */}\n//       <div className=\"sidebar\">\n//         <button\n//           className={`sidebar-btn ${currentView === 'residential' ? 'active' : ''}`}\n//           onClick={() => setCurrentView('residential')}\n//         >\n//           Residential Pumps\n//         </button>\n//         <button\n//           className={`sidebar-btn ${currentView === 'agricultural' ? 'active' : ''}`}\n//           onClick={() => setCurrentView('agricultural')}\n//         >\n//           Agricultural Pumps\n//         </button>\n//       </div>\n\n//       {/* Add New Pump Catalog */}\n//       <div className=\"gallery-container\">\n//         <div className=\"add-new-pump\" onClick={() => setShowAddForm(true)}>\n//           <span className=\"plus-sign\">+</span>\n//           <p className=\"add-text\">Add New Pump</p>\n//         </div>\n//       </div>\n\n//       {/* Add Pump Form (Visible when + sign is clicked) */}\n//       {showAddForm && (\n//         <div className=\"add-pump-form\">\n//           <h2>Add New Pump</h2>\n//           {error && <p className=\"error\">{error}</p>}\n//           <form onSubmit={handleAddPump}>\n//             <input\n//               type=\"text\"\n//               name=\"name\"\n//               value={newPumpData.name}\n//               onChange={handleInputChange}\n//               placeholder=\"Pump Name\"\n//               required\n//             />\n//             <input\n//               type=\"text\"\n//               name=\"price\"\n//               value={newPumpData.price}\n//               onChange={handleInputChange}\n//               placeholder=\"Pump Price\"\n//               required\n//             />\n//             <textarea\n//               name=\"description\"\n//               value={newPumpData.description}\n//               onChange={handleInputChange}\n//               placeholder=\"Description\"\n//               required\n//             />\n//             <input type=\"file\" onChange={handleImageUpload} required />\n//             <button type=\"submit\">Add Pump</button>\n//             <button type=\"button\" onClick={() => setShowAddForm(false)}>Cancel</button>\n//           </form>\n//         </div>\n//       )}\n\n//       {/* Pump Gallery */}\n//       <div className=\"gallery-container\">\n//         <div className=\"pump-gallery\">\n//           {currentView === 'residential' && (\n//             <>\n//               <h2>Residential Pumps</h2>\n//               {residentialPumps.length > 0 ? (\n//                 residentialPumps.map((pump) => (\n//                   <div key={pump._id} className=\"pump-item animate-on-scroll\">\n//                     <img src={`http://localhost:5001/uploads/${pump.image}`} alt={pump.name} />\n//                     <div className=\"pump-info\">\n//                       <p className=\"pump-name\">{pump.name}</p>\n//                       <p className=\"pump-price\">{pump.price}</p>\n//                       <Link to={`/pumpDetail/${pump.id}`} className=\"read-more-btn\">\n//                         Read more\n//                       </Link>\n//                       <button className=\"delete-btn\">Delete</button>\n//                     </div>\n//                   </div>\n//                 ))\n//               ) : (\n//                 <p>Loading Residential Pumps...</p>\n//               )}\n//             </>\n//           )}\n\n//           {currentView === 'agricultural' && (\n//             <>\n//               <h2>Agricultural Pumps</h2>\n//               {agriculturalPumps.length > 0 ? (\n//                 agriculturalPumps.map((pump) => (\n//                   <div key={pump._id} className=\"pump-item animate-on-scroll\">\n//                     <img src={`http://localhost:5001/uploads/${pump.image}`} alt={pump.name} />\n//                     <div className=\"pump-info\">\n//                       <p className=\"pump-name\">{pump.name}</p>\n//                       <p className=\"pump-price\">{pump.price}</p>\n//                       <Link to={`/pumpDetails/${pump.id}`} className=\"read-more-btn\">\n//                         Read more\n//                       </Link>\n//                       <button className=\"delete-btn\">Delete</button>\n//                     </div>\n//                   </div>\n//                 ))\n//               ) : (\n//                 <p>Loading Agricultural Pumps...</p>\n//               )}\n//             </>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AdminPortal;\n\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../css/admin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPortal = () => {\n  _s();\n  const navigate = useNavigate();\n  const [pumps, setPumps] = useState([]);\n  const [newPump, setNewPump] = useState({\n    name: '',\n    price: '',\n    features: [],\n    image: null\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [uploadError, setUploadError] = useState(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  // Fetch pumps when the component mounts\n  useEffect(() => {\n    const fetchPumps = async () => {\n      try {\n        const response = await Axios.get('http://localhost:5001/api/pumps');\n        setPumps(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to load pumps.');\n        setLoading(false);\n      }\n    };\n    fetchPumps();\n  }, []);\n\n  // Handle image selection\n  const handleImageChange = event => {\n    setSelectedImage(event.target.files[0]);\n  };\n\n  // Handle new pump data changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewPump({\n      ...newPump,\n      [name]: value\n    });\n  };\n\n  // Handle the features input\n  const handleFeaturesChange = (e, index) => {\n    const newFeatures = [...newPump.features];\n    newFeatures[index] = e.target.value;\n    setNewPump({\n      ...newPump,\n      features: newFeatures\n    });\n  };\n  const addFeature = () => {\n    setNewPump({\n      ...newPump,\n      features: [...newPump.features, '']\n    });\n  };\n\n  // Upload image\n  const uploadImage = async () => {\n    const formData = new FormData();\n    formData.append('image', selectedImage);\n    try {\n      const response = await Axios.post('http://localhost:5001/api/upload', formData);\n      return response.data.imagePath; // Returns the image path if successful\n    } catch (err) {\n      setUploadError('Error uploading image');\n      throw err;\n    }\n  };\n\n  // Add a new pump\n  const handleAddPump = async event => {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      const imagePath = await uploadImage();\n      const pumpData = {\n        ...newPump,\n        image: imagePath\n      };\n      const response = await Axios.post('http://localhost:5001/api/pumps', pumpData);\n      setPumps([...pumps, response.data]);\n      setNewPump({\n        name: '',\n        price: '',\n        features: [],\n        image: null\n      });\n      setSelectedImage(null);\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to add pump.');\n      setLoading(false);\n    }\n  };\n\n  // Delete a pump\n  const handleDeletePump = async pumpId => {\n    try {\n      await Axios.delete(`http://localhost:5001/api/pumps/${pumpId}`);\n      setPumps(pumps.filter(pump => pump._id !== pumpId));\n    } catch (err) {\n      setError('Failed to delete pump.');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-portal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Portal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddPump,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Pump\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: newPump.name,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Price:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"price\",\n          value: newPump.price,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Features:\", newPump.features.map((feature, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: feature,\n          onChange: e => handleFeaturesChange(e, index),\n          required: true\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addFeature,\n          children: \"Add Feature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Image:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleImageChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }, this), uploadError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: uploadError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Pump\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pump-gallery\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Existing Pumps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: pumps.map(pump => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: pump.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Price: \", pump.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost:5001/uploads/${pump.image}`,\n              alt: pump.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeletePump(pump._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 29\n          }, this)\n        }, pump._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 315,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminPortal, \"geDpdMoX/bhE82rQsEVsAVXzD14=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPortal;\nexport default AdminPortal;\nvar _c;\n$RefreshReg$(_c, \"AdminPortal\");","map":{"version":3,"names":["React","useState","useEffect","Axios","useNavigate","jsxDEV","_jsxDEV","AdminPortal","_s","navigate","pumps","setPumps","newPump","setNewPump","name","price","features","image","loading","setLoading","error","setError","uploadError","setUploadError","selectedImage","setSelectedImage","fetchPumps","response","get","data","err","handleImageChange","event","target","files","handleInputChange","e","value","handleFeaturesChange","index","newFeatures","addFeature","uploadImage","formData","FormData","append","post","imagePath","handleAddPump","preventDefault","pumpData","handleDeletePump","pumpId","delete","filter","pump","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","onChange","required","map","feature","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/manvirsingh/Documents/react1/project/src/components/AdminPortal.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n// import '../css/Admin.css'; // Ensure CSS file path is correct\n\n// const AdminPortal = () => {\n//   const [residentialPumps, setResidentialPumps] = useState([]);\n//   const [agriculturalPumps, setAgriculturalPumps] = useState([]);\n//   const [image, setImage] = useState(null);\n//   const [error, setError] = useState(null);\n//   const [currentView, setCurrentView] = useState('residential');\n//   const [showAddForm, setShowAddForm] = useState(false); // Manage visibility of the add pump form\n//   const [newPumpData, setNewPumpData] = useState({\n//     name: '',\n//     price: '',\n//     description: '',\n//     image: ''\n//   });\n\n//   // Fetch residential pumps data\n//   useEffect(() => {\n//     axios\n//       .get('http://localhost:5001/api/pumps')\n//       .then((response) => setResidentialPumps(response.data))\n//       .catch((error) => console.error('Error fetching residential pumps:', error));\n//   }, []);\n\n//   // Fetch agricultural pumps data\n//   useEffect(() => {\n//     axios\n//       .get('http://localhost:5001/api/agpumps')\n//       .then((response) => setAgriculturalPumps(response.data))\n//       .catch((error) => console.error('Error fetching agricultural pumps:', error));\n//   }, []);\n\n//   // Handle image upload\n//   const handleImageUpload = async (e) => {\n//     const files = e.target.files;\n//     const formData = new FormData();\n//     formData.append('image', files[0]);\n\n//     try {\n//       const response = await axios.post('http://localhost:5001/api/upload', formData);\n//       setImage(response.data.filePath); // Assuming backend returns filePath\n//     } catch (err) {\n//       console.error('Error uploading image:', err);\n//       setError('Error uploading image.');\n//     }\n//   };\n\n//   // Handle new pump form input change\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewPumpData((prevState) => ({\n//       ...prevState,\n//       [name]: value\n//     }));\n//   };\n\n//   // Handle adding new pump to the database\n//   const handleAddPump = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const pumpData = { ...newPumpData, image: image }; // Include image path in the pump data\n//       await axios.post('http://localhost:5001/api/pumps', pumpData);\n//       setShowAddForm(false); // Close the form after submitting\n//       setNewPumpData({ name: '', price: '', description: '', image: '' }); // Reset form data\n//       // Reload residential pumps after adding a new one\n//       const response = await axios.get('http://localhost:5001/api/pumps');\n//       setResidentialPumps(response.data);\n//     } catch (error) {\n//       console.error('Error adding new pump:', error);\n//       setError('Error adding new pump.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"admin-portal\">\n//       <h1>Admin Portal</h1>\n\n//       {/* Sidebar for toggling views */}\n//       <div className=\"sidebar\">\n//         <button\n//           className={`sidebar-btn ${currentView === 'residential' ? 'active' : ''}`}\n//           onClick={() => setCurrentView('residential')}\n//         >\n//           Residential Pumps\n//         </button>\n//         <button\n//           className={`sidebar-btn ${currentView === 'agricultural' ? 'active' : ''}`}\n//           onClick={() => setCurrentView('agricultural')}\n//         >\n//           Agricultural Pumps\n//         </button>\n//       </div>\n\n//       {/* Add New Pump Catalog */}\n//       <div className=\"gallery-container\">\n//         <div className=\"add-new-pump\" onClick={() => setShowAddForm(true)}>\n//           <span className=\"plus-sign\">+</span>\n//           <p className=\"add-text\">Add New Pump</p>\n//         </div>\n//       </div>\n\n//       {/* Add Pump Form (Visible when + sign is clicked) */}\n//       {showAddForm && (\n//         <div className=\"add-pump-form\">\n//           <h2>Add New Pump</h2>\n//           {error && <p className=\"error\">{error}</p>}\n//           <form onSubmit={handleAddPump}>\n//             <input\n//               type=\"text\"\n//               name=\"name\"\n//               value={newPumpData.name}\n//               onChange={handleInputChange}\n//               placeholder=\"Pump Name\"\n//               required\n//             />\n//             <input\n//               type=\"text\"\n//               name=\"price\"\n//               value={newPumpData.price}\n//               onChange={handleInputChange}\n//               placeholder=\"Pump Price\"\n//               required\n//             />\n//             <textarea\n//               name=\"description\"\n//               value={newPumpData.description}\n//               onChange={handleInputChange}\n//               placeholder=\"Description\"\n//               required\n//             />\n//             <input type=\"file\" onChange={handleImageUpload} required />\n//             <button type=\"submit\">Add Pump</button>\n//             <button type=\"button\" onClick={() => setShowAddForm(false)}>Cancel</button>\n//           </form>\n//         </div>\n//       )}\n\n//       {/* Pump Gallery */}\n//       <div className=\"gallery-container\">\n//         <div className=\"pump-gallery\">\n//           {currentView === 'residential' && (\n//             <>\n//               <h2>Residential Pumps</h2>\n//               {residentialPumps.length > 0 ? (\n//                 residentialPumps.map((pump) => (\n//                   <div key={pump._id} className=\"pump-item animate-on-scroll\">\n//                     <img src={`http://localhost:5001/uploads/${pump.image}`} alt={pump.name} />\n//                     <div className=\"pump-info\">\n//                       <p className=\"pump-name\">{pump.name}</p>\n//                       <p className=\"pump-price\">{pump.price}</p>\n//                       <Link to={`/pumpDetail/${pump.id}`} className=\"read-more-btn\">\n//                         Read more\n//                       </Link>\n//                       <button className=\"delete-btn\">Delete</button>\n//                     </div>\n//                   </div>\n//                 ))\n//               ) : (\n//                 <p>Loading Residential Pumps...</p>\n//               )}\n//             </>\n//           )}\n\n//           {currentView === 'agricultural' && (\n//             <>\n//               <h2>Agricultural Pumps</h2>\n//               {agriculturalPumps.length > 0 ? (\n//                 agriculturalPumps.map((pump) => (\n//                   <div key={pump._id} className=\"pump-item animate-on-scroll\">\n//                     <img src={`http://localhost:5001/uploads/${pump.image}`} alt={pump.name} />\n//                     <div className=\"pump-info\">\n//                       <p className=\"pump-name\">{pump.name}</p>\n//                       <p className=\"pump-price\">{pump.price}</p>\n//                       <Link to={`/pumpDetails/${pump.id}`} className=\"read-more-btn\">\n//                         Read more\n//                       </Link>\n//                       <button className=\"delete-btn\">Delete</button>\n//                     </div>\n//                   </div>\n//                 ))\n//               ) : (\n//                 <p>Loading Agricultural Pumps...</p>\n//               )}\n//             </>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AdminPortal;\n\n\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../css/admin.css';\n\nconst AdminPortal = () => {\n    const navigate = useNavigate();\n    const [pumps, setPumps] = useState([]);\n    const [newPump, setNewPump] = useState({ name: '', price: '', features: [], image: null });\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [uploadError, setUploadError] = useState(null);\n    const [selectedImage, setSelectedImage] = useState(null);\n\n    // Fetch pumps when the component mounts\n    useEffect(() => {\n        const fetchPumps = async () => {\n            try {\n                const response = await Axios.get('http://localhost:5001/api/pumps');\n                setPumps(response.data);\n                setLoading(false);\n            } catch (err) {\n                setError('Failed to load pumps.');\n                setLoading(false);\n            }\n        };\n\n        fetchPumps();\n    }, []);\n\n    // Handle image selection\n    const handleImageChange = (event) => {\n        setSelectedImage(event.target.files[0]);\n    };\n\n    // Handle new pump data changes\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setNewPump({\n            ...newPump,\n            [name]: value,\n        });\n    };\n\n    // Handle the features input\n    const handleFeaturesChange = (e, index) => {\n        const newFeatures = [...newPump.features];\n        newFeatures[index] = e.target.value;\n        setNewPump({ ...newPump, features: newFeatures });\n    };\n\n    const addFeature = () => {\n        setNewPump({\n            ...newPump,\n            features: [...newPump.features, ''],\n        });\n    };\n\n    // Upload image\n    const uploadImage = async () => {\n        const formData = new FormData();\n        formData.append('image', selectedImage);\n\n        try {\n            const response = await Axios.post('http://localhost:5001/api/upload', formData);\n            return response.data.imagePath; // Returns the image path if successful\n        } catch (err) {\n            setUploadError('Error uploading image');\n            throw err;\n        }\n    };\n\n    // Add a new pump\n    const handleAddPump = async (event) => {\n        event.preventDefault();\n\n        setLoading(true);\n\n        try {\n            const imagePath = await uploadImage();\n\n            const pumpData = {\n                ...newPump,\n                image: imagePath,\n            };\n\n            const response = await Axios.post('http://localhost:5001/api/pumps', pumpData);\n            setPumps([...pumps, response.data]);\n\n            setNewPump({ name: '', price: '', features: [], image: null });\n            setSelectedImage(null);\n            setLoading(false);\n        } catch (err) {\n            setError('Failed to add pump.');\n            setLoading(false);\n        }\n    };\n\n    // Delete a pump\n    const handleDeletePump = async (pumpId) => {\n        try {\n            await Axios.delete(`http://localhost:5001/api/pumps/${pumpId}`);\n            setPumps(pumps.filter(pump => pump._id !== pumpId));\n        } catch (err) {\n            setError('Failed to delete pump.');\n        }\n    };\n\n    if (loading) return <div>Loading...</div>;\n\n    if (error) return <div>{error}</div>;\n\n    return (\n        <div className=\"admin-portal\">\n            <h1>Admin Portal</h1>\n\n            <form onSubmit={handleAddPump}>\n                <h2>Add New Pump</h2>\n                <label>\n                    Name:\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={newPump.name}\n                        onChange={handleInputChange}\n                        required\n                    />\n                </label>\n\n                <label>\n                    Price:\n                    <input\n                        type=\"text\"\n                        name=\"price\"\n                        value={newPump.price}\n                        onChange={handleInputChange}\n                        required\n                    />\n                </label>\n\n                <label>\n                    Features:\n                    {newPump.features.map((feature, index) => (\n                        <input\n                            key={index}\n                            type=\"text\"\n                            value={feature}\n                            onChange={(e) => handleFeaturesChange(e, index)}\n                            required\n                        />\n                    ))}\n                    <button type=\"button\" onClick={addFeature}>Add Feature</button>\n                </label>\n\n                <label>\n                    Image:\n                    <input\n                        type=\"file\"\n                        onChange={handleImageChange}\n                        required\n                    />\n                </label>\n\n                {uploadError && <p>{uploadError}</p>}\n\n                <button type=\"submit\">Add Pump</button>\n            </form>\n\n            <div className=\"pump-gallery\">\n                <h2>Existing Pumps</h2>\n                <ul>\n                    {pumps.map((pump) => (\n                        <li key={pump._id}>\n                            <div>\n                                <h3>{pump.name}</h3>\n                                <p>Price: {pump.price}</p>\n                                <img src={`http://localhost:5001/uploads/${pump.image}`} alt={pump.name} />\n                                <button onClick={() => handleDeletePump(pump._id)}>Delete</button>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default AdminPortal;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}