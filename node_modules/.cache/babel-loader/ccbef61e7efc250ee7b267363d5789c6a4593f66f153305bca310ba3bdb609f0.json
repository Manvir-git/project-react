{"ast":null,"code":"var _jsxFileName = \"/Users/manvirsingh/Documents/react1/project/src/components/Products.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { Link } from 'react-router-dom';\n// import axios from 'axios'; // Import Axios\n// import '../css/styl.css';\n\n// const Products = () => {\n//   const [agriculturalPumps, setAgriculturalPumps] = useState([]);\n\n// useEffect(() => {\n//   // Fetch residential pumps\n\n//   // Fetch agricultural pumps\n//   axios.get('http://localhost:5001/api/agpumps')\n//     .then(response => setAgriculturalPumps(response.data))\n//     .catch(error => console.error('Error fetching agricultural pumps:', error));\n// }, []);\n\n//   const handleScroll = () => {\n//     const elements = document.querySelectorAll('.animate-on-scroll');\n//     elements.forEach((el) => {\n//       const rect = el.getBoundingClientRect();\n//       if (rect.top < window.innerHeight - 100) {\n//         el.classList.add('slide-in');\n//       }\n//     });\n//   };\n\n//   // Adding scroll event listener and cleanup\n//   useEffect(() => {\n//     window.addEventListener('scroll', handleScroll);\n\n//     // Cleanup on component unmount\n//     return () => window.removeEventListener('scroll', handleScroll);\n//   }, []);\n\n//   return (\n//     <div>\n//       <div className=\"main-content\" id=\"mainContent\">\n//         <div className=\"product-info\">\n//           <div className=\"container1\">\n//             <div>\n//               <h2>Agricultural Products</h2>\n//             </div>\n//             <div>\n//               <p>We offer a wide range of Agricultural submersible pumps to suit your needs.</p>\n//             </div>\n//           </div>\n//         </div>\n\n//          {/* Agricultural Pumps Section */}\n\n//       <div className=\"pump-gallery\">\n//         {agriculturalPumps.length > 0 ? (\n//           agriculturalPumps.map((pump) => (\n//             <div key={pump.id} className=\"pump-item animate-on-scroll\">\n//               <img src={`http://localhost:5001/uploads/${pump.image}`} alt={pump.name} />\n//               <div className=\"pump-info\">\n//                 <p className=\"pump-name\">{pump.name}</p>\n//                 <p className=\"pump-price\">{pump.price}</p>\n//                 <Link to={`/pumpDetail/${pump.id}`} className=\"read-more-btn\">Read more</Link>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>Loading Agricultural Pumps...</p>\n//         )}\n//       </div>\n\n//         </div>\n//       </div>\n\n//   );\n// };\n\n// export default Products;\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport '../css/read.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PumpDetail = () => {\n  _s();\n  const {\n    pumpId\n  } = useParams(); // Extract pumpId from URL\n  const navigate = useNavigate();\n  const [pump, setPump] = useState(null); // State to hold pump data\n  const [loading, setLoading] = useState(true); // Loading state\n  const [error, setError] = useState(null); // Error state\n  const [agriculturalPumps, setAgriculturalPumps] = useState([]); // State for agricultural pumps\n  const [showAgriculturalDetails, setShowAgriculturalDetails] = useState(false); // Toggle for Read More button\n\n  // Fetch pump details based on the pumpId\n  useEffect(() => {\n    const fetchPumpDetails = async () => {\n      try {\n        // Call the API to fetch pump data based on the ID from the URL\n        const response = await fetch(`http://localhost:5001/api/pumps/${pumpId}`);\n        if (!response.ok) {\n          throw new Error('Pump not found');\n        }\n        const data = await response.json();\n        setPump(data.pump); // Set the pump data from the API (data.pump)\n        setLoading(false); // Set loading to false once data is fetched\n      } catch (err) {\n        setError(err.message); // Handle error if data fetch fails\n        setLoading(false);\n      }\n    };\n    fetchPumpDetails(); // Call the function to fetch pump details\n  }, [pumpId]); // Re-run the effect when pumpId changes\n\n  // Fetch agricultural pumps when the \"Read More\" button is clicked\n  const fetchAgriculturalPumps = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/api/agpumps');\n      if (!response.ok) {\n        throw new Error('Failed to fetch agricultural pumps');\n      }\n      const data = await response.json();\n      setAgriculturalPumps(data.pumps); // Set the agricultural pumps data\n      setShowAgriculturalDetails(true); // Show the details when the data is loaded\n    } catch (err) {\n      setError(err.message); // Handle error if data fetch fails\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 16\n    }, this); // Show loading message while fetching data\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [error, \". Please go back to the \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/products\",\n        children: \"products page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 52\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 16\n    }, this); // Show error message if pump not found\n  }\n  if (!pump) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Pump not found. Please go back to the \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/products\",\n        children: \"products page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 59\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 16\n    }, this); // Fallback if no pump data\n  }\n\n  // Create an array of pump IDs in the order they appear\n  const pumpIds = ['v4', 'v5', 'v6']; // You can dynamically fetch this list based on available pumps in your database\n\n  // Find the index of the current pump\n  const currentIndex = pumpIds.indexOf(pumpId);\n\n  // Determine the previous and next pump IDs (circular navigation)\n  const prevPump = pumpIds[(currentIndex - 1 + pumpIds.length) % pumpIds.length];\n  const nextPump = pumpIds[(currentIndex + 1) % pumpIds.length];\n\n  // Function to navigate to a specific pump detail\n  const handleNavigation = id => {\n    navigate(`/pumpDetail/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:5001/uploads/${pump.image}`,\n        className: \"product-image\",\n        alt: pump.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: pump.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"MRP:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 24\n          }, this), \" \", pump.price, \" (Inclusive of all taxes)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"features\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Features\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Array.isArray(pump.features) && pump.features.length > 0 ? pump.features.map((feature, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: feature\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 37\n            }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"No features available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 33\n            }, this) // Fallback message if features are empty or undefined\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://lallytradingcompany.onrender.com\",\n          className: \"buy-button\",\n          children: \"Send Enquiry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:5001/uploads/${pump.rightImage}`,\n        alt: \"Right view of pump\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-btn left-btn\",\n        onClick: () => handleNavigation(prevPump),\n        children: \"\\u2190 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-btn right-btn\",\n        onClick: () => handleNavigation(nextPump),\n        children: \"\\u2192 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"read-more-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchAgriculturalPumps,\n        className: \"read-more-btn\",\n        children: \"Read More (Agricultural Pumps)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), showAgriculturalDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"agriculture-pumps\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Agricultural Pumps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this), agriculturalPumps.length > 0 ? agriculturalPumps.map(agPump => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"agricultural-pump\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: agPump.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: agPump.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:5001/uploads/${agPump.image}`,\n            alt: agPump.name,\n            style: {\n              width: '200px',\n              height: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 37\n          }, this)]\n        }, agPump._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 33\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No agricultural pumps found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 9\n  }, this);\n};\n_s(PumpDetail, \"fwYNkcXXHOtx1vc7B4zcYXozjRA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PumpDetail;\nexport default PumpDetail;\nvar _c;\n$RefreshReg$(_c, \"PumpDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","PumpDetail","_s","pumpId","navigate","pump","setPump","loading","setLoading","error","setError","agriculturalPumps","setAgriculturalPumps","showAgriculturalDetails","setShowAgriculturalDetails","fetchPumpDetails","response","fetch","ok","Error","data","json","err","message","fetchAgriculturalPumps","pumps","children","fileName","_jsxFileName","lineNumber","columnNumber","href","pumpIds","currentIndex","indexOf","prevPump","length","nextPump","handleNavigation","id","className","src","image","alt","name","price","Array","isArray","features","map","feature","index","rightImage","onClick","agPump","style","width","height","_id","_c","$RefreshReg$"],"sources":["/Users/manvirsingh/Documents/react1/project/src/components/Products.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { Link } from 'react-router-dom';\n// import axios from 'axios'; // Import Axios\n// import '../css/styl.css';\n\n// const Products = () => {\n//   const [agriculturalPumps, setAgriculturalPumps] = useState([]);\n\n// useEffect(() => {\n//   // Fetch residential pumps\n\n\n//   // Fetch agricultural pumps\n//   axios.get('http://localhost:5001/api/agpumps')\n//     .then(response => setAgriculturalPumps(response.data))\n//     .catch(error => console.error('Error fetching agricultural pumps:', error));\n// }, []);\n\n//   const handleScroll = () => {\n//     const elements = document.querySelectorAll('.animate-on-scroll');\n//     elements.forEach((el) => {\n//       const rect = el.getBoundingClientRect();\n//       if (rect.top < window.innerHeight - 100) {\n//         el.classList.add('slide-in');\n//       }\n//     });\n//   };\n\n//   // Adding scroll event listener and cleanup\n//   useEffect(() => {\n//     window.addEventListener('scroll', handleScroll);\n\n//     // Cleanup on component unmount\n//     return () => window.removeEventListener('scroll', handleScroll);\n//   }, []);\n\n//   return (\n//     <div>\n//       <div className=\"main-content\" id=\"mainContent\">\n//         <div className=\"product-info\">\n//           <div className=\"container1\">\n//             <div>\n//               <h2>Agricultural Products</h2>\n//             </div>\n//             <div>\n//               <p>We offer a wide range of Agricultural submersible pumps to suit your needs.</p>\n//             </div>\n//           </div>\n//         </div>\n\n\n//          {/* Agricultural Pumps Section */}\n\n//       <div className=\"pump-gallery\">\n//         {agriculturalPumps.length > 0 ? (\n//           agriculturalPumps.map((pump) => (\n//             <div key={pump.id} className=\"pump-item animate-on-scroll\">\n//               <img src={`http://localhost:5001/uploads/${pump.image}`} alt={pump.name} />\n//               <div className=\"pump-info\">\n//                 <p className=\"pump-name\">{pump.name}</p>\n//                 <p className=\"pump-price\">{pump.price}</p>\n//                 <Link to={`/pumpDetail/${pump.id}`} className=\"read-more-btn\">Read more</Link>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p>Loading Agricultural Pumps...</p>\n//         )}\n//       </div>\n\n//         </div>\n//       </div>\n\n//   );\n// };\n\n// export default Products;\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport '../css/read.css'; \n\nconst PumpDetail = () => {\n    const { pumpId } = useParams(); // Extract pumpId from URL\n    const navigate = useNavigate();\n\n    const [pump, setPump] = useState(null); // State to hold pump data\n    const [loading, setLoading] = useState(true); // Loading state\n    const [error, setError] = useState(null); // Error state\n    const [agriculturalPumps, setAgriculturalPumps] = useState([]); // State for agricultural pumps\n    const [showAgriculturalDetails, setShowAgriculturalDetails] = useState(false); // Toggle for Read More button\n\n    // Fetch pump details based on the pumpId\n    useEffect(() => {\n        const fetchPumpDetails = async () => {\n            try {\n                // Call the API to fetch pump data based on the ID from the URL\n                const response = await fetch(`http://localhost:5001/api/pumps/${pumpId}`);\n                \n                if (!response.ok) {\n                    throw new Error('Pump not found');\n                }\n\n                const data = await response.json();\n                setPump(data.pump); // Set the pump data from the API (data.pump)\n                setLoading(false); // Set loading to false once data is fetched\n            } catch (err) {\n                setError(err.message); // Handle error if data fetch fails\n                setLoading(false);\n            }\n        };\n\n        fetchPumpDetails(); // Call the function to fetch pump details\n    }, [pumpId]); // Re-run the effect when pumpId changes\n\n    // Fetch agricultural pumps when the \"Read More\" button is clicked\n    const fetchAgriculturalPumps = async () => {\n        try {\n            const response = await fetch('http://localhost:5001/api/agpumps');\n            \n            if (!response.ok) {\n                throw new Error('Failed to fetch agricultural pumps');\n            }\n\n            const data = await response.json();\n            setAgriculturalPumps(data.pumps); // Set the agricultural pumps data\n            setShowAgriculturalDetails(true); // Show the details when the data is loaded\n        } catch (err) {\n            setError(err.message); // Handle error if data fetch fails\n        }\n    };\n\n    if (loading) {\n        return <div>Loading...</div>; // Show loading message while fetching data\n    }\n\n    if (error) {\n        return <div>{error}. Please go back to the <a href=\"/products\">products page</a>.</div>; // Show error message if pump not found\n    }\n\n    if (!pump) {\n        return <div>Pump not found. Please go back to the <a href=\"/products\">products page</a>.</div>; // Fallback if no pump data\n    }\n\n    // Create an array of pump IDs in the order they appear\n    const pumpIds = ['v4', 'v5', 'v6']; // You can dynamically fetch this list based on available pumps in your database\n\n    // Find the index of the current pump\n    const currentIndex = pumpIds.indexOf(pumpId);\n\n    // Determine the previous and next pump IDs (circular navigation)\n    const prevPump = pumpIds[(currentIndex - 1 + pumpIds.length) % pumpIds.length];\n    const nextPump = pumpIds[(currentIndex + 1) % pumpIds.length];\n\n    // Function to navigate to a specific pump detail\n    const handleNavigation = (id) => {\n        navigate(`/pumpDetail/${id}`);\n    };\n\n    return (\n        <div className=\"body\">\n            {/* Product Description */}\n            <div className=\"product-description\">\n                {/* Ensure image URL is correct */}\n                <img \n                    src={`http://localhost:5001/uploads/${pump.image}`} \n                    className=\"product-image\" \n                    alt={pump.name} \n                />\n                <div>\n                    <h1>{pump.name}</h1>\n                    <p><strong>MRP:</strong> {pump.price} (Inclusive of all taxes)</p>\n\n                    <div className=\"features\">\n                        <h2>Features</h2>\n                        <ul>\n                            {Array.isArray(pump.features) && pump.features.length > 0 ? (\n                                pump.features.map((feature, index) => (\n                                    <li key={index}>{feature}</li>\n                                ))\n                            ) : (\n                                <li>No features available.</li> // Fallback message if features are empty or undefined\n                            )}\n                        </ul>\n                    </div>\n\n                    <a \n                        href=\"https://lallytradingcompany.onrender.com\" \n                        className=\"buy-button\"\n                    >\n                        Send Enquiry\n                    </a>\n                </div>\n            </div>\n\n            {/* Image for right view of the pump */}\n            <div className=\"chart\">\n                <img \n                    src={`http://localhost:5001/uploads/${pump.rightImage}`} \n                    alt=\"Right view of pump\" \n                />\n            </div>\n\n            {/* Navigation Buttons */}\n            <div className=\"navigation-buttons\">\n                <button \n                    className=\"nav-btn left-btn\"\n                    onClick={() => handleNavigation(prevPump)}\n                >\n                    &#8592; {/* Left Arrow (back) */}\n                </button>\n                <button \n                    className=\"nav-btn right-btn\"\n                    onClick={() => handleNavigation(nextPump)}\n                >\n                    &#8594; {/* Right Arrow (forward) */}\n                </button>\n            </div>\n\n            {/* Read More Button */}\n            <div className=\"read-more-section\">\n                <button \n                    onClick={fetchAgriculturalPumps} \n                    className=\"read-more-btn\"\n                >\n                    Read More (Agricultural Pumps)\n                </button>\n\n                {/* Display Agricultural Pumps when the button is clicked */}\n                {showAgriculturalDetails && (\n                    <div className=\"agriculture-pumps\">\n                        <h2>Agricultural Pumps</h2>\n                        {agriculturalPumps.length > 0 ? (\n                            agriculturalPumps.map((agPump) => (\n                                <div key={agPump._id} className=\"agricultural-pump\">\n                                    <h3>{agPump.name}</h3>\n                                    <p>{agPump.price}</p>\n                                    <img \n                                        src={`http://localhost:5001/uploads/${agPump.image}`} \n                                        alt={agPump.name} \n                                        style={{ width: '200px', height: 'auto' }} \n                                    />\n                                </div>\n                            ))\n                        ) : (\n                            <p>No agricultural pumps found.</p>\n                        )}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default PumpDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}